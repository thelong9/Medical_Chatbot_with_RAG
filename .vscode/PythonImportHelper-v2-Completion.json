[
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Profile",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Rating",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "cart.cart",
        "description": "cart.cart",
        "isExtraImport": true,
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "cart.cart",
        "description": "cart.cart",
        "isExtraImport": true,
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "ShippingForm",
        "importPath": "payment.forms",
        "description": "payment.forms",
        "isExtraImport": true,
        "detail": "payment.forms",
        "documentation": {}
    },
    {
        "label": "PaymentForm",
        "importPath": "payment.forms",
        "description": "payment.forms",
        "isExtraImport": true,
        "detail": "payment.forms",
        "documentation": {}
    },
    {
        "label": "ShippingForm",
        "importPath": "payment.forms",
        "description": "payment.forms",
        "isExtraImport": true,
        "detail": "payment.forms",
        "documentation": {}
    },
    {
        "label": "ShippingAddress",
        "importPath": "payment.models",
        "description": "payment.models",
        "isExtraImport": true,
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "payment.models",
        "description": "payment.models",
        "isExtraImport": true,
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "OrderItem",
        "importPath": "payment.models",
        "description": "payment.models",
        "isExtraImport": true,
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "ShippingAddress",
        "importPath": "payment.models",
        "description": "payment.models",
        "isExtraImport": true,
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "pandas",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pandas",
        "description": "pandas",
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "BaseCommand",
        "importPath": "django.core.management.base",
        "description": "django.core.management.base",
        "isExtraImport": true,
        "detail": "django.core.management.base",
        "documentation": {}
    },
    {
        "label": "create_engine",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "UserCreationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "UserChangeForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "SetPasswordForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "UserCreationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "EmptyPage",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "PageNotAnInteger",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "CartConfig",
        "kind": 6,
        "importPath": "cart.apps",
        "description": "cart.apps",
        "peekOfCode": "class CartConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'cart'",
        "detail": "cart.apps",
        "documentation": {}
    },
    {
        "label": "Cart",
        "kind": 6,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "class Cart():\n\tdef __init__(self, request):\n\t\tself.session = request.session\n\t\t# Get request\n\t\tself.request = request\n\t\t# Get the current session key if it exists\n\t\tcart = self.session.get('session_key')\n\t\t# If the user is new, no session key!  Create one!\n\t\tif 'session_key' not in request.session:\n\t\t\tcart = self.session['session_key'] = {}",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\tself.session",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\tself.session = request.session\n\t\t# Get request\n\t\tself.request = request\n\t\t# Get the current session key if it exists\n\t\tcart = self.session.get('session_key')\n\t\t# If the user is new, no session key!  Create one!\n\t\tif 'session_key' not in request.session:\n\t\t\tcart = self.session['session_key'] = {}\n\t\t# Make sure cart is available on all pages of site\n\t\tself.cart = cart",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\tself.request",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\tself.request = request\n\t\t# Get the current session key if it exists\n\t\tcart = self.session.get('session_key')\n\t\t# If the user is new, no session key!  Create one!\n\t\tif 'session_key' not in request.session:\n\t\t\tcart = self.session['session_key'] = {}\n\t\t# Make sure cart is available on all pages of site\n\t\tself.cart = cart\n\tdef db_add(self, product, quantity):\n\t\tproduct_id = str(product)",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\tcart",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\tcart = self.session.get('session_key')\n\t\t# If the user is new, no session key!  Create one!\n\t\tif 'session_key' not in request.session:\n\t\t\tcart = self.session['session_key'] = {}\n\t\t# Make sure cart is available on all pages of site\n\t\tself.cart = cart\n\tdef db_add(self, product, quantity):\n\t\tproduct_id = str(product)\n\t\tproduct_qty = str(quantity)\n\t\t# Logic",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\t\tcart",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\t\tcart = self.session['session_key'] = {}\n\t\t# Make sure cart is available on all pages of site\n\t\tself.cart = cart\n\tdef db_add(self, product, quantity):\n\t\tproduct_id = str(product)\n\t\tproduct_qty = str(quantity)\n\t\t# Logic\n\t\tif product_id in self.cart:\n\t\t\tpass\n\t\telse:",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\tself.cart",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\tself.cart = cart\n\tdef db_add(self, product, quantity):\n\t\tproduct_id = str(product)\n\t\tproduct_qty = str(quantity)\n\t\t# Logic\n\t\tif product_id in self.cart:\n\t\t\tpass\n\t\telse:\n\t\t\t#self.cart[product_id] = {'price': str(product.price)}\n\t\t\tself.cart[product_id] = int(product_qty)",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\tproduct_id",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\tproduct_id = str(product)\n\t\tproduct_qty = str(quantity)\n\t\t# Logic\n\t\tif product_id in self.cart:\n\t\t\tpass\n\t\telse:\n\t\t\t#self.cart[product_id] = {'price': str(product.price)}\n\t\t\tself.cart[product_id] = int(product_qty)\n\t\tself.session.modified = True\n\t\t# Deal with logged in user",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\tproduct_qty",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\tproduct_qty = str(quantity)\n\t\t# Logic\n\t\tif product_id in self.cart:\n\t\t\tpass\n\t\telse:\n\t\t\t#self.cart[product_id] = {'price': str(product.price)}\n\t\t\tself.cart[product_id] = int(product_qty)\n\t\tself.session.modified = True\n\t\t# Deal with logged in user\n\t\tif self.request.user.is_authenticated:",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\t\t#self.cart[product_id]",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\t\t#self.cart[product_id] = {'price': str(product.price)}\n\t\t\tself.cart[product_id] = int(product_qty)\n\t\tself.session.modified = True\n\t\t# Deal with logged in user\n\t\tif self.request.user.is_authenticated:\n\t\t\t# Get the current user profile\n\t\t\tcurrent_user = Profile.objects.filter(user__id=self.request.user.id)\n\t\t\t# Convert {'3':1, '2':4} to {\"3\":1, \"2\":4}\n\t\t\tcarty = str(self.cart)\n\t\t\tcarty = carty.replace(\"\\'\", \"\\\"\")",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.cart[product_id]",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\t\tself.cart[product_id] = int(product_qty)\n\t\tself.session.modified = True\n\t\t# Deal with logged in user\n\t\tif self.request.user.is_authenticated:\n\t\t\t# Get the current user profile\n\t\t\tcurrent_user = Profile.objects.filter(user__id=self.request.user.id)\n\t\t\t# Convert {'3':1, '2':4} to {\"3\":1, \"2\":4}\n\t\t\tcarty = str(self.cart)\n\t\t\tcarty = carty.replace(\"\\'\", \"\\\"\")\n\t\t\t# Save carty to the Profile Model",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\tself.session.modified",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\tself.session.modified = True\n\t\t# Deal with logged in user\n\t\tif self.request.user.is_authenticated:\n\t\t\t# Get the current user profile\n\t\t\tcurrent_user = Profile.objects.filter(user__id=self.request.user.id)\n\t\t\t# Convert {'3':1, '2':4} to {\"3\":1, \"2\":4}\n\t\t\tcarty = str(self.cart)\n\t\t\tcarty = carty.replace(\"\\'\", \"\\\"\")\n\t\t\t# Save carty to the Profile Model\n\t\t\tcurrent_user.update(old_cart=str(carty))",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\t\tcurrent_user",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\t\tcurrent_user = Profile.objects.filter(user__id=self.request.user.id)\n\t\t\t# Convert {'3':1, '2':4} to {\"3\":1, \"2\":4}\n\t\t\tcarty = str(self.cart)\n\t\t\tcarty = carty.replace(\"\\'\", \"\\\"\")\n\t\t\t# Save carty to the Profile Model\n\t\t\tcurrent_user.update(old_cart=str(carty))\n\tdef add(self, product, quantity):\n\t\tproduct_id = str(product.id)\n\t\tproduct_qty = str(quantity)\n\t\t# Logic",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\t\tcarty",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\t\tcarty = str(self.cart)\n\t\t\tcarty = carty.replace(\"\\'\", \"\\\"\")\n\t\t\t# Save carty to the Profile Model\n\t\t\tcurrent_user.update(old_cart=str(carty))\n\tdef add(self, product, quantity):\n\t\tproduct_id = str(product.id)\n\t\tproduct_qty = str(quantity)\n\t\t# Logic\n\t\tif product_id in self.cart:\n\t\t\tpass",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\t\tcarty",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\t\tcarty = carty.replace(\"\\'\", \"\\\"\")\n\t\t\t# Save carty to the Profile Model\n\t\t\tcurrent_user.update(old_cart=str(carty))\n\tdef add(self, product, quantity):\n\t\tproduct_id = str(product.id)\n\t\tproduct_qty = str(quantity)\n\t\t# Logic\n\t\tif product_id in self.cart:\n\t\t\tpass\n\t\telse:",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\tproduct_id",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\tproduct_id = str(product.id)\n\t\tproduct_qty = str(quantity)\n\t\t# Logic\n\t\tif product_id in self.cart:\n\t\t\tpass\n\t\telse:\n\t\t\t#self.cart[product_id] = {'price': str(product.price)}\n\t\t\tself.cart[product_id] = int(product_qty)\n\t\tself.session.modified = True\n\t\t# Deal with logged in user",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\tproduct_qty",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\tproduct_qty = str(quantity)\n\t\t# Logic\n\t\tif product_id in self.cart:\n\t\t\tpass\n\t\telse:\n\t\t\t#self.cart[product_id] = {'price': str(product.price)}\n\t\t\tself.cart[product_id] = int(product_qty)\n\t\tself.session.modified = True\n\t\t# Deal with logged in user\n\t\tif self.request.user.is_authenticated:",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\t\t#self.cart[product_id]",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\t\t#self.cart[product_id] = {'price': str(product.price)}\n\t\t\tself.cart[product_id] = int(product_qty)\n\t\tself.session.modified = True\n\t\t# Deal with logged in user\n\t\tif self.request.user.is_authenticated:\n\t\t\t# Get the current user profile\n\t\t\tcurrent_user = Profile.objects.filter(user__id=self.request.user.id)\n\t\t\t# Convert {'3':1, '2':4} to {\"3\":1, \"2\":4}\n\t\t\tcarty = str(self.cart)\n\t\t\tcarty = carty.replace(\"\\'\", \"\\\"\")",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.cart[product_id]",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\t\tself.cart[product_id] = int(product_qty)\n\t\tself.session.modified = True\n\t\t# Deal with logged in user\n\t\tif self.request.user.is_authenticated:\n\t\t\t# Get the current user profile\n\t\t\tcurrent_user = Profile.objects.filter(user__id=self.request.user.id)\n\t\t\t# Convert {'3':1, '2':4} to {\"3\":1, \"2\":4}\n\t\t\tcarty = str(self.cart)\n\t\t\tcarty = carty.replace(\"\\'\", \"\\\"\")\n\t\t\t# Save carty to the Profile Model",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\tself.session.modified",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\tself.session.modified = True\n\t\t# Deal with logged in user\n\t\tif self.request.user.is_authenticated:\n\t\t\t# Get the current user profile\n\t\t\tcurrent_user = Profile.objects.filter(user__id=self.request.user.id)\n\t\t\t# Convert {'3':1, '2':4} to {\"3\":1, \"2\":4}\n\t\t\tcarty = str(self.cart)\n\t\t\tcarty = carty.replace(\"\\'\", \"\\\"\")\n\t\t\t# Save carty to the Profile Model\n\t\t\tcurrent_user.update(old_cart=str(carty))",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\t\tcurrent_user",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\t\tcurrent_user = Profile.objects.filter(user__id=self.request.user.id)\n\t\t\t# Convert {'3':1, '2':4} to {\"3\":1, \"2\":4}\n\t\t\tcarty = str(self.cart)\n\t\t\tcarty = carty.replace(\"\\'\", \"\\\"\")\n\t\t\t# Save carty to the Profile Model\n\t\t\tcurrent_user.update(old_cart=str(carty))\n\tdef cart_total(self):\n\t\t# Get product IDS\n\t\tproduct_ids = self.cart.keys()\n\t\t# lookup those keys in our products database model",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\t\tcarty",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\t\tcarty = str(self.cart)\n\t\t\tcarty = carty.replace(\"\\'\", \"\\\"\")\n\t\t\t# Save carty to the Profile Model\n\t\t\tcurrent_user.update(old_cart=str(carty))\n\tdef cart_total(self):\n\t\t# Get product IDS\n\t\tproduct_ids = self.cart.keys()\n\t\t# lookup those keys in our products database model\n\t\tproducts = Product.objects.filter(id__in=product_ids)\n\t\t# Get quantities",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\t\tcarty",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\t\tcarty = carty.replace(\"\\'\", \"\\\"\")\n\t\t\t# Save carty to the Profile Model\n\t\t\tcurrent_user.update(old_cart=str(carty))\n\tdef cart_total(self):\n\t\t# Get product IDS\n\t\tproduct_ids = self.cart.keys()\n\t\t# lookup those keys in our products database model\n\t\tproducts = Product.objects.filter(id__in=product_ids)\n\t\t# Get quantities\n\t\tquantities = self.cart",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\tproduct_ids",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\tproduct_ids = self.cart.keys()\n\t\t# lookup those keys in our products database model\n\t\tproducts = Product.objects.filter(id__in=product_ids)\n\t\t# Get quantities\n\t\tquantities = self.cart\n\t\t# Start counting at 0\n\t\ttotal = 0\n\t\tfor key, value in quantities.items():\n\t\t\t# Convert key string into into so we can do math\n\t\t\tkey = int(key)",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\tproducts",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\tproducts = Product.objects.filter(id__in=product_ids)\n\t\t# Get quantities\n\t\tquantities = self.cart\n\t\t# Start counting at 0\n\t\ttotal = 0\n\t\tfor key, value in quantities.items():\n\t\t\t# Convert key string into into so we can do math\n\t\t\tkey = int(key)\n\t\t\tfor product in products:\n\t\t\t\tif product.id == key:",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\tquantities",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\tquantities = self.cart\n\t\t# Start counting at 0\n\t\ttotal = 0\n\t\tfor key, value in quantities.items():\n\t\t\t# Convert key string into into so we can do math\n\t\t\tkey = int(key)\n\t\t\tfor product in products:\n\t\t\t\tif product.id == key:\n\t\t\t\t\t\ttotal = total + (product.price * value)\n\t\treturn total",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\ttotal",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\ttotal = 0\n\t\tfor key, value in quantities.items():\n\t\t\t# Convert key string into into so we can do math\n\t\t\tkey = int(key)\n\t\t\tfor product in products:\n\t\t\t\tif product.id == key:\n\t\t\t\t\t\ttotal = total + (product.price * value)\n\t\treturn total\n\tdef __len__(self):\n\t\treturn len(self.cart)",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\t\tkey",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\t\tkey = int(key)\n\t\t\tfor product in products:\n\t\t\t\tif product.id == key:\n\t\t\t\t\t\ttotal = total + (product.price * value)\n\t\treturn total\n\tdef __len__(self):\n\t\treturn len(self.cart)\n\tdef get_prods(self):\n\t\t# Get ids from cart\n\t\tproduct_ids = self.cart.keys()",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\t\ttotal",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\t\t\t\t\ttotal = total + (product.price * value)\n\t\treturn total\n\tdef __len__(self):\n\t\treturn len(self.cart)\n\tdef get_prods(self):\n\t\t# Get ids from cart\n\t\tproduct_ids = self.cart.keys()\n\t\t# Use ids to lookup products in database model\n\t\tproducts = Product.objects.filter(id__in=product_ids)\n\t\t# Return those looked up products",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\tproduct_ids",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\tproduct_ids = self.cart.keys()\n\t\t# Use ids to lookup products in database model\n\t\tproducts = Product.objects.filter(id__in=product_ids)\n\t\t# Return those looked up products\n\t\treturn products\n\tdef get_quants(self):\n\t\tquantities = self.cart\n\t\treturn quantities\n\tdef update(self, product, quantity):\n\t\tproduct_id = str(product)",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\tproducts",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\tproducts = Product.objects.filter(id__in=product_ids)\n\t\t# Return those looked up products\n\t\treturn products\n\tdef get_quants(self):\n\t\tquantities = self.cart\n\t\treturn quantities\n\tdef update(self, product, quantity):\n\t\tproduct_id = str(product)\n\t\tproduct_qty = int(quantity)\n\t\t# Get cart",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\tquantities",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\tquantities = self.cart\n\t\treturn quantities\n\tdef update(self, product, quantity):\n\t\tproduct_id = str(product)\n\t\tproduct_qty = int(quantity)\n\t\t# Get cart\n\t\tourcart = self.cart\n\t\t# Update Dictionary/cart\n\t\tourcart[product_id] = product_qty\n\t\tself.session.modified = True",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\tproduct_id",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\tproduct_id = str(product)\n\t\tproduct_qty = int(quantity)\n\t\t# Get cart\n\t\tourcart = self.cart\n\t\t# Update Dictionary/cart\n\t\tourcart[product_id] = product_qty\n\t\tself.session.modified = True\n\t\t# Deal with logged in user\n\t\tif self.request.user.is_authenticated:\n\t\t\t# Get the current user profile",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\tproduct_qty",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\tproduct_qty = int(quantity)\n\t\t# Get cart\n\t\tourcart = self.cart\n\t\t# Update Dictionary/cart\n\t\tourcart[product_id] = product_qty\n\t\tself.session.modified = True\n\t\t# Deal with logged in user\n\t\tif self.request.user.is_authenticated:\n\t\t\t# Get the current user profile\n\t\t\tcurrent_user = Profile.objects.filter(user__id=self.request.user.id)",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\tourcart",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\tourcart = self.cart\n\t\t# Update Dictionary/cart\n\t\tourcart[product_id] = product_qty\n\t\tself.session.modified = True\n\t\t# Deal with logged in user\n\t\tif self.request.user.is_authenticated:\n\t\t\t# Get the current user profile\n\t\t\tcurrent_user = Profile.objects.filter(user__id=self.request.user.id)\n\t\t\t# Convert {'3':1, '2':4} to {\"3\":1, \"2\":4}\n\t\t\tcarty = str(self.cart)",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\tourcart[product_id]",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\tourcart[product_id] = product_qty\n\t\tself.session.modified = True\n\t\t# Deal with logged in user\n\t\tif self.request.user.is_authenticated:\n\t\t\t# Get the current user profile\n\t\t\tcurrent_user = Profile.objects.filter(user__id=self.request.user.id)\n\t\t\t# Convert {'3':1, '2':4} to {\"3\":1, \"2\":4}\n\t\t\tcarty = str(self.cart)\n\t\t\tcarty = carty.replace(\"\\'\", \"\\\"\")\n\t\t\t# Save carty to the Profile Model",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\tself.session.modified",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\tself.session.modified = True\n\t\t# Deal with logged in user\n\t\tif self.request.user.is_authenticated:\n\t\t\t# Get the current user profile\n\t\t\tcurrent_user = Profile.objects.filter(user__id=self.request.user.id)\n\t\t\t# Convert {'3':1, '2':4} to {\"3\":1, \"2\":4}\n\t\t\tcarty = str(self.cart)\n\t\t\tcarty = carty.replace(\"\\'\", \"\\\"\")\n\t\t\t# Save carty to the Profile Model\n\t\t\tcurrent_user.update(old_cart=str(carty))",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\t\tcurrent_user",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\t\tcurrent_user = Profile.objects.filter(user__id=self.request.user.id)\n\t\t\t# Convert {'3':1, '2':4} to {\"3\":1, \"2\":4}\n\t\t\tcarty = str(self.cart)\n\t\t\tcarty = carty.replace(\"\\'\", \"\\\"\")\n\t\t\t# Save carty to the Profile Model\n\t\t\tcurrent_user.update(old_cart=str(carty))\n\t\tthing = self.cart\n\t\treturn thing\n\tdef delete(self, product):\n\t\tproduct_id = str(product)",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\t\tcarty",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\t\tcarty = str(self.cart)\n\t\t\tcarty = carty.replace(\"\\'\", \"\\\"\")\n\t\t\t# Save carty to the Profile Model\n\t\t\tcurrent_user.update(old_cart=str(carty))\n\t\tthing = self.cart\n\t\treturn thing\n\tdef delete(self, product):\n\t\tproduct_id = str(product)\n\t\t# Delete from dictionary/cart\n\t\tif product_id in self.cart:",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\t\tcarty",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\t\tcarty = carty.replace(\"\\'\", \"\\\"\")\n\t\t\t# Save carty to the Profile Model\n\t\t\tcurrent_user.update(old_cart=str(carty))\n\t\tthing = self.cart\n\t\treturn thing\n\tdef delete(self, product):\n\t\tproduct_id = str(product)\n\t\t# Delete from dictionary/cart\n\t\tif product_id in self.cart:\n\t\t\tdel self.cart[product_id]",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\tthing",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\tthing = self.cart\n\t\treturn thing\n\tdef delete(self, product):\n\t\tproduct_id = str(product)\n\t\t# Delete from dictionary/cart\n\t\tif product_id in self.cart:\n\t\t\tdel self.cart[product_id]\n\t\tself.session.modified = True\n\t\t# Deal with logged in user\n\t\tif self.request.user.is_authenticated:",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\tproduct_id",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\tproduct_id = str(product)\n\t\t# Delete from dictionary/cart\n\t\tif product_id in self.cart:\n\t\t\tdel self.cart[product_id]\n\t\tself.session.modified = True\n\t\t# Deal with logged in user\n\t\tif self.request.user.is_authenticated:\n\t\t\t# Get the current user profile\n\t\t\tcurrent_user = Profile.objects.filter(user__id=self.request.user.id)\n\t\t\t# Convert {'3':1, '2':4} to {\"3\":1, \"2\":4}",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\tself.session.modified",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\tself.session.modified = True\n\t\t# Deal with logged in user\n\t\tif self.request.user.is_authenticated:\n\t\t\t# Get the current user profile\n\t\t\tcurrent_user = Profile.objects.filter(user__id=self.request.user.id)\n\t\t\t# Convert {'3':1, '2':4} to {\"3\":1, \"2\":4}\n\t\t\tcarty = str(self.cart)\n\t\t\tcarty = carty.replace(\"\\'\", \"\\\"\")\n\t\t\t# Save carty to the Profile Model\n\t\t\tcurrent_user.update(old_cart=str(carty))",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\t\tcurrent_user",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\t\tcurrent_user = Profile.objects.filter(user__id=self.request.user.id)\n\t\t\t# Convert {'3':1, '2':4} to {\"3\":1, \"2\":4}\n\t\t\tcarty = str(self.cart)\n\t\t\tcarty = carty.replace(\"\\'\", \"\\\"\")\n\t\t\t# Save carty to the Profile Model\n\t\t\tcurrent_user.update(old_cart=str(carty))",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\t\tcarty",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\t\tcarty = str(self.cart)\n\t\t\tcarty = carty.replace(\"\\'\", \"\\\"\")\n\t\t\t# Save carty to the Profile Model\n\t\t\tcurrent_user.update(old_cart=str(carty))",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "\t\t\tcarty",
        "kind": 5,
        "importPath": "cart.cart",
        "description": "cart.cart",
        "peekOfCode": "\t\t\tcarty = carty.replace(\"\\'\", \"\\\"\")\n\t\t\t# Save carty to the Profile Model\n\t\t\tcurrent_user.update(old_cart=str(carty))",
        "detail": "cart.cart",
        "documentation": {}
    },
    {
        "label": "cart",
        "kind": 2,
        "importPath": "cart.context_processors",
        "description": "cart.context_processors",
        "peekOfCode": "def cart(request):\n\t# Return the default data from our Cart\n\treturn {'cart': Cart(request)}",
        "detail": "cart.context_processors",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "cart.urls",
        "description": "cart.urls",
        "peekOfCode": "urlpatterns = [\n\tpath('', views.cart_summary, name=\"cart_summary\"),\n\tpath('add/', views.cart_add, name=\"cart_add\"),\n\tpath('delete/', views.cart_delete, name=\"cart_delete\"),\n\tpath('update/', views.cart_update, name=\"cart_update\"),\n]",
        "detail": "cart.urls",
        "documentation": {}
    },
    {
        "label": "cart_summary",
        "kind": 2,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "def cart_summary(request):\n\t# Get the cart\n\tcart = Cart(request)\n\tcart_products = cart.get_prods\n\tquantities = cart.get_quants\n\ttotals = cart.cart_total()\n\treturn render(request, \"cart_summary.html\", {\"cart_products\":cart_products, \"quantities\":quantities, \"totals\":totals})\ndef cart_add(request):\n\t# Get the cart\n\tcart = Cart(request)",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "cart_add",
        "kind": 2,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "def cart_add(request):\n\t# Get the cart\n\tcart = Cart(request)\n\t# test for POST\n\tif request.POST.get('action') == 'post':\n\t\t# Get stuff\n\t\tproduct_id = int(request.POST.get('product_id'))\n\t\tproduct_qty = int(request.POST.get('product_qty'))\n\t\t# lookup product in DB\n\t\tproduct = get_object_or_404(Product, id=product_id)",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "cart_delete",
        "kind": 2,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "def cart_delete(request):\n\tcart = Cart(request)\n\tif request.POST.get('action') == 'post':\n\t\t# Get stuff\n\t\tproduct_id = int(request.POST.get('product_id'))\n\t\t# Call delete Function in Cart\n\t\tcart.delete(product=product_id)\n\t\tresponse = JsonResponse({'product':product_id})\n\t\t#return redirect('cart_summary')\n\t\tmessages.success(request, (\"Item Deleted From Shopping Cart...\"))",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "cart_update",
        "kind": 2,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "def cart_update(request):\n\tcart = Cart(request)\n\tif request.POST.get('action') == 'post':\n\t\t# Get stuff\n\t\tproduct_id = int(request.POST.get('product_id'))\n\t\tproduct_qty = int(request.POST.get('product_qty'))\n\t\tcart.update(product=product_id, quantity=product_qty)\n\t\tresponse = JsonResponse({'qty':product_qty})\n\t\t#return redirect('cart_summary')\n\t\tmessages.success(request, (\"Your Cart Has Been Updated...\"))",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "\tcart",
        "kind": 5,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "\tcart = Cart(request)\n\tcart_products = cart.get_prods\n\tquantities = cart.get_quants\n\ttotals = cart.cart_total()\n\treturn render(request, \"cart_summary.html\", {\"cart_products\":cart_products, \"quantities\":quantities, \"totals\":totals})\ndef cart_add(request):\n\t# Get the cart\n\tcart = Cart(request)\n\t# test for POST\n\tif request.POST.get('action') == 'post':",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "\tcart_products",
        "kind": 5,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "\tcart_products = cart.get_prods\n\tquantities = cart.get_quants\n\ttotals = cart.cart_total()\n\treturn render(request, \"cart_summary.html\", {\"cart_products\":cart_products, \"quantities\":quantities, \"totals\":totals})\ndef cart_add(request):\n\t# Get the cart\n\tcart = Cart(request)\n\t# test for POST\n\tif request.POST.get('action') == 'post':\n\t\t# Get stuff",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "\tquantities",
        "kind": 5,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "\tquantities = cart.get_quants\n\ttotals = cart.cart_total()\n\treturn render(request, \"cart_summary.html\", {\"cart_products\":cart_products, \"quantities\":quantities, \"totals\":totals})\ndef cart_add(request):\n\t# Get the cart\n\tcart = Cart(request)\n\t# test for POST\n\tif request.POST.get('action') == 'post':\n\t\t# Get stuff\n\t\tproduct_id = int(request.POST.get('product_id'))",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "\ttotals",
        "kind": 5,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "\ttotals = cart.cart_total()\n\treturn render(request, \"cart_summary.html\", {\"cart_products\":cart_products, \"quantities\":quantities, \"totals\":totals})\ndef cart_add(request):\n\t# Get the cart\n\tcart = Cart(request)\n\t# test for POST\n\tif request.POST.get('action') == 'post':\n\t\t# Get stuff\n\t\tproduct_id = int(request.POST.get('product_id'))\n\t\tproduct_qty = int(request.POST.get('product_qty'))",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "\tcart",
        "kind": 5,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "\tcart = Cart(request)\n\t# test for POST\n\tif request.POST.get('action') == 'post':\n\t\t# Get stuff\n\t\tproduct_id = int(request.POST.get('product_id'))\n\t\tproduct_qty = int(request.POST.get('product_qty'))\n\t\t# lookup product in DB\n\t\tproduct = get_object_or_404(Product, id=product_id)\n\t\t# Save to session\n\t\tcart.add(product=product, quantity=product_qty)",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "\t\tproduct_id",
        "kind": 5,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "\t\tproduct_id = int(request.POST.get('product_id'))\n\t\tproduct_qty = int(request.POST.get('product_qty'))\n\t\t# lookup product in DB\n\t\tproduct = get_object_or_404(Product, id=product_id)\n\t\t# Save to session\n\t\tcart.add(product=product, quantity=product_qty)\n\t\t# Get Cart Quantity\n\t\tcart_quantity = cart.__len__()\n\t\t# Return resonse\n\t\t# response = JsonResponse({'Product Name: ': product.name})",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "\t\tproduct_qty",
        "kind": 5,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "\t\tproduct_qty = int(request.POST.get('product_qty'))\n\t\t# lookup product in DB\n\t\tproduct = get_object_or_404(Product, id=product_id)\n\t\t# Save to session\n\t\tcart.add(product=product, quantity=product_qty)\n\t\t# Get Cart Quantity\n\t\tcart_quantity = cart.__len__()\n\t\t# Return resonse\n\t\t# response = JsonResponse({'Product Name: ': product.name})\n\t\tresponse = JsonResponse({'qty': cart_quantity})",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "\t\tproduct",
        "kind": 5,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "\t\tproduct = get_object_or_404(Product, id=product_id)\n\t\t# Save to session\n\t\tcart.add(product=product, quantity=product_qty)\n\t\t# Get Cart Quantity\n\t\tcart_quantity = cart.__len__()\n\t\t# Return resonse\n\t\t# response = JsonResponse({'Product Name: ': product.name})\n\t\tresponse = JsonResponse({'qty': cart_quantity})\n\t\tmessages.success(request, (\"Product Added To Cart...\"))\n\t\treturn response",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "\t\tcart_quantity",
        "kind": 5,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "\t\tcart_quantity = cart.__len__()\n\t\t# Return resonse\n\t\t# response = JsonResponse({'Product Name: ': product.name})\n\t\tresponse = JsonResponse({'qty': cart_quantity})\n\t\tmessages.success(request, (\"Product Added To Cart...\"))\n\t\treturn response\ndef cart_delete(request):\n\tcart = Cart(request)\n\tif request.POST.get('action') == 'post':\n\t\t# Get stuff",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "\t\tresponse",
        "kind": 5,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "\t\tresponse = JsonResponse({'qty': cart_quantity})\n\t\tmessages.success(request, (\"Product Added To Cart...\"))\n\t\treturn response\ndef cart_delete(request):\n\tcart = Cart(request)\n\tif request.POST.get('action') == 'post':\n\t\t# Get stuff\n\t\tproduct_id = int(request.POST.get('product_id'))\n\t\t# Call delete Function in Cart\n\t\tcart.delete(product=product_id)",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "\tcart",
        "kind": 5,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "\tcart = Cart(request)\n\tif request.POST.get('action') == 'post':\n\t\t# Get stuff\n\t\tproduct_id = int(request.POST.get('product_id'))\n\t\t# Call delete Function in Cart\n\t\tcart.delete(product=product_id)\n\t\tresponse = JsonResponse({'product':product_id})\n\t\t#return redirect('cart_summary')\n\t\tmessages.success(request, (\"Item Deleted From Shopping Cart...\"))\n\t\treturn response",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "\t\tproduct_id",
        "kind": 5,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "\t\tproduct_id = int(request.POST.get('product_id'))\n\t\t# Call delete Function in Cart\n\t\tcart.delete(product=product_id)\n\t\tresponse = JsonResponse({'product':product_id})\n\t\t#return redirect('cart_summary')\n\t\tmessages.success(request, (\"Item Deleted From Shopping Cart...\"))\n\t\treturn response\ndef cart_update(request):\n\tcart = Cart(request)\n\tif request.POST.get('action') == 'post':",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "\t\tresponse",
        "kind": 5,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "\t\tresponse = JsonResponse({'product':product_id})\n\t\t#return redirect('cart_summary')\n\t\tmessages.success(request, (\"Item Deleted From Shopping Cart...\"))\n\t\treturn response\ndef cart_update(request):\n\tcart = Cart(request)\n\tif request.POST.get('action') == 'post':\n\t\t# Get stuff\n\t\tproduct_id = int(request.POST.get('product_id'))\n\t\tproduct_qty = int(request.POST.get('product_qty'))",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "\tcart",
        "kind": 5,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "\tcart = Cart(request)\n\tif request.POST.get('action') == 'post':\n\t\t# Get stuff\n\t\tproduct_id = int(request.POST.get('product_id'))\n\t\tproduct_qty = int(request.POST.get('product_qty'))\n\t\tcart.update(product=product_id, quantity=product_qty)\n\t\tresponse = JsonResponse({'qty':product_qty})\n\t\t#return redirect('cart_summary')\n\t\tmessages.success(request, (\"Your Cart Has Been Updated...\"))\n\t\treturn response",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "\t\tproduct_id",
        "kind": 5,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "\t\tproduct_id = int(request.POST.get('product_id'))\n\t\tproduct_qty = int(request.POST.get('product_qty'))\n\t\tcart.update(product=product_id, quantity=product_qty)\n\t\tresponse = JsonResponse({'qty':product_qty})\n\t\t#return redirect('cart_summary')\n\t\tmessages.success(request, (\"Your Cart Has Been Updated...\"))\n\t\treturn response",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "\t\tproduct_qty",
        "kind": 5,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "\t\tproduct_qty = int(request.POST.get('product_qty'))\n\t\tcart.update(product=product_id, quantity=product_qty)\n\t\tresponse = JsonResponse({'qty':product_qty})\n\t\t#return redirect('cart_summary')\n\t\tmessages.success(request, (\"Your Cart Has Been Updated...\"))\n\t\treturn response",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "\t\tresponse",
        "kind": 5,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "\t\tresponse = JsonResponse({'qty':product_qty})\n\t\t#return redirect('cart_summary')\n\t\tmessages.success(request, (\"Your Cart Has Been Updated...\"))\n\t\treturn response",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "ecom.asgi",
        "description": "ecom.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "ecom.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "ecom.settings",
        "description": "ecom.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-x4m$gfeda-r+)u05g*bzm%8#_vz&8-wl^3epo45gqi#_eqwvtq'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nUSE_L10N = True\nALLOWED_HOSTS = []\n# Application definition",
        "detail": "ecom.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "ecom.settings",
        "description": "ecom.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-x4m$gfeda-r+)u05g*bzm%8#_vz&8-wl^3epo45gqi#_eqwvtq'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nUSE_L10N = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "ecom.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "ecom.settings",
        "description": "ecom.settings",
        "peekOfCode": "DEBUG = True\nUSE_L10N = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "ecom.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "ecom.settings",
        "description": "ecom.settings",
        "peekOfCode": "USE_L10N = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "ecom.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "ecom.settings",
        "description": "ecom.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'store',",
        "detail": "ecom.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "ecom.settings",
        "description": "ecom.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'store',\n    'cart',\n    'payment',",
        "detail": "ecom.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "ecom.settings",
        "description": "ecom.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'ecom.urls'",
        "detail": "ecom.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "ecom.settings",
        "description": "ecom.settings",
        "peekOfCode": "ROOT_URLCONF = 'ecom.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "ecom.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "ecom.settings",
        "description": "ecom.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "ecom.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "ecom.settings",
        "description": "ecom.settings",
        "peekOfCode": "WSGI_APPLICATION = 'ecom.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "ecom.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "ecom.settings",
        "description": "ecom.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "ecom.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "ecom.settings",
        "description": "ecom.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "ecom.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "ecom.settings",
        "description": "ecom.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = ['static/']\nMEDIA_URL = 'media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')",
        "detail": "ecom.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "ecom.settings",
        "description": "ecom.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = ['static/']\nMEDIA_URL = 'media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type",
        "detail": "ecom.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "ecom.settings",
        "description": "ecom.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = ['static/']\nMEDIA_URL = 'media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field",
        "detail": "ecom.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "ecom.settings",
        "description": "ecom.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = ['static/']\nMEDIA_URL = 'media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "ecom.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "ecom.settings",
        "description": "ecom.settings",
        "peekOfCode": "STATIC_URL = 'static/'\nSTATICFILES_DIRS = ['static/']\nMEDIA_URL = 'media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "ecom.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "ecom.settings",
        "description": "ecom.settings",
        "peekOfCode": "STATICFILES_DIRS = ['static/']\nMEDIA_URL = 'media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "ecom.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "ecom.settings",
        "description": "ecom.settings",
        "peekOfCode": "MEDIA_URL = 'media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "ecom.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "ecom.settings",
        "description": "ecom.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "ecom.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "ecom.settings",
        "description": "ecom.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "ecom.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "ecom.urls",
        "description": "ecom.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('store.urls')),\n    path('cart/', include('cart.urls')),\n    path('payment/', include('payment.urls')),\n] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)",
        "detail": "ecom.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "ecom.wsgi",
        "description": "ecom.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "ecom.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "payment.migrations.0001_initial",
        "description": "payment.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='ShippingAddress',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "payment.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "payment.migrations.0002_rename_address1_shippingaddress_shipping_address1_and_more",
        "description": "payment.migrations.0002_rename_address1_shippingaddress_shipping_address1_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('payment', '0001_initial'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='shippingaddress',\n            old_name='address1',\n            new_name='shipping_address1',\n        ),",
        "detail": "payment.migrations.0002_rename_address1_shippingaddress_shipping_address1_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "payment.migrations.0003_order_alter_shippingaddress_shipping_address2_and_more",
        "description": "payment.migrations.0003_order_alter_shippingaddress_shipping_address2_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0004_profile_old_cart'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('payment', '0002_rename_address1_shippingaddress_shipping_address1_and_more'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Order',\n            fields=[",
        "detail": "payment.migrations.0003_order_alter_shippingaddress_shipping_address2_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "payment.migrations.0004_remove_shippingaddress_shipping_country_and_more",
        "description": "payment.migrations.0004_remove_shippingaddress_shipping_country_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('payment', '0003_order_alter_shippingaddress_shipping_address2_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='shippingaddress',\n            name='shipping_country',\n        ),\n        migrations.RemoveField(",
        "detail": "payment.migrations.0004_remove_shippingaddress_shipping_country_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "payment.migrations.0005_alter_order_amount_paid",
        "description": "payment.migrations.0005_alter_order_amount_paid",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('payment', '0004_remove_shippingaddress_shipping_country_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='amount_paid',\n            field=models.DecimalField(decimal_places=2, max_digits=10),\n        ),",
        "detail": "payment.migrations.0005_alter_order_amount_paid",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "payment.migrations.0006_alter_order_amount_paid_alter_orderitem_price",
        "description": "payment.migrations.0006_alter_order_amount_paid_alter_orderitem_price",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('payment', '0005_alter_order_amount_paid'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='amount_paid',\n            field=models.DecimalField(decimal_places=2, max_digits=20),\n        ),",
        "detail": "payment.migrations.0006_alter_order_amount_paid_alter_orderitem_price",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "payment.migrations.0007_alter_order_amount_paid_alter_orderitem_price",
        "description": "payment.migrations.0007_alter_order_amount_paid_alter_orderitem_price",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('payment', '0006_alter_order_amount_paid_alter_orderitem_price'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='amount_paid',\n            field=models.IntegerField(default=0),\n        ),",
        "detail": "payment.migrations.0007_alter_order_amount_paid_alter_orderitem_price",
        "documentation": {}
    },
    {
        "label": "PaymentConfig",
        "kind": 6,
        "importPath": "payment.apps",
        "description": "payment.apps",
        "peekOfCode": "class PaymentConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'payment'",
        "detail": "payment.apps",
        "documentation": {}
    },
    {
        "label": "ShippingForm",
        "kind": 6,
        "importPath": "payment.forms",
        "description": "payment.forms",
        "peekOfCode": "class ShippingForm(forms.ModelForm):\n\tshipping_full_name = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Full Name'}), required=True)\n\tshipping_email = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Email Address'}), required=True)\n\tshipping_address1 = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Address1'}), required=True)\n\tshipping_address2 = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Address2'}), required=False)\n\tshipping_city = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'City'}), required=True)\n\tclass Meta:\n\t\tmodel = ShippingAddress\n\t\tfields = ['shipping_full_name', 'shipping_email', 'shipping_address1', 'shipping_address2', 'shipping_city']\n\t\texclude = ['user',]",
        "detail": "payment.forms",
        "documentation": {}
    },
    {
        "label": "PaymentForm",
        "kind": 6,
        "importPath": "payment.forms",
        "description": "payment.forms",
        "peekOfCode": "class PaymentForm(forms.Form):\n\tcard_name =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Name On Card'}), required=True)\n\tcard_number =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Card Number'}), required=True)\n\tcard_exp_date =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Expiration Date'}), required=True)\n\tcard_cvv_number =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'CVV Code'}), required=True)\n\tcard_address1 =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing Address 1'}), required=True)\n\tcard_address2 =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing Address 2'}), required=False)\n\tcard_city =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing City'}), required=True)",
        "detail": "payment.forms",
        "documentation": {}
    },
    {
        "label": "\tshipping_full_name",
        "kind": 5,
        "importPath": "payment.forms",
        "description": "payment.forms",
        "peekOfCode": "\tshipping_full_name = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Full Name'}), required=True)\n\tshipping_email = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Email Address'}), required=True)\n\tshipping_address1 = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Address1'}), required=True)\n\tshipping_address2 = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Address2'}), required=False)\n\tshipping_city = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'City'}), required=True)\n\tclass Meta:\n\t\tmodel = ShippingAddress\n\t\tfields = ['shipping_full_name', 'shipping_email', 'shipping_address1', 'shipping_address2', 'shipping_city']\n\t\texclude = ['user',]\nclass PaymentForm(forms.Form):",
        "detail": "payment.forms",
        "documentation": {}
    },
    {
        "label": "\tshipping_email",
        "kind": 5,
        "importPath": "payment.forms",
        "description": "payment.forms",
        "peekOfCode": "\tshipping_email = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Email Address'}), required=True)\n\tshipping_address1 = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Address1'}), required=True)\n\tshipping_address2 = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Address2'}), required=False)\n\tshipping_city = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'City'}), required=True)\n\tclass Meta:\n\t\tmodel = ShippingAddress\n\t\tfields = ['shipping_full_name', 'shipping_email', 'shipping_address1', 'shipping_address2', 'shipping_city']\n\t\texclude = ['user',]\nclass PaymentForm(forms.Form):\n\tcard_name =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Name On Card'}), required=True)",
        "detail": "payment.forms",
        "documentation": {}
    },
    {
        "label": "\tshipping_address1",
        "kind": 5,
        "importPath": "payment.forms",
        "description": "payment.forms",
        "peekOfCode": "\tshipping_address1 = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Address1'}), required=True)\n\tshipping_address2 = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Address2'}), required=False)\n\tshipping_city = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'City'}), required=True)\n\tclass Meta:\n\t\tmodel = ShippingAddress\n\t\tfields = ['shipping_full_name', 'shipping_email', 'shipping_address1', 'shipping_address2', 'shipping_city']\n\t\texclude = ['user',]\nclass PaymentForm(forms.Form):\n\tcard_name =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Name On Card'}), required=True)\n\tcard_number =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Card Number'}), required=True)",
        "detail": "payment.forms",
        "documentation": {}
    },
    {
        "label": "\tshipping_address2",
        "kind": 5,
        "importPath": "payment.forms",
        "description": "payment.forms",
        "peekOfCode": "\tshipping_address2 = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Address2'}), required=False)\n\tshipping_city = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'City'}), required=True)\n\tclass Meta:\n\t\tmodel = ShippingAddress\n\t\tfields = ['shipping_full_name', 'shipping_email', 'shipping_address1', 'shipping_address2', 'shipping_city']\n\t\texclude = ['user',]\nclass PaymentForm(forms.Form):\n\tcard_name =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Name On Card'}), required=True)\n\tcard_number =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Card Number'}), required=True)\n\tcard_exp_date =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Expiration Date'}), required=True)",
        "detail": "payment.forms",
        "documentation": {}
    },
    {
        "label": "\tshipping_city",
        "kind": 5,
        "importPath": "payment.forms",
        "description": "payment.forms",
        "peekOfCode": "\tshipping_city = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'City'}), required=True)\n\tclass Meta:\n\t\tmodel = ShippingAddress\n\t\tfields = ['shipping_full_name', 'shipping_email', 'shipping_address1', 'shipping_address2', 'shipping_city']\n\t\texclude = ['user',]\nclass PaymentForm(forms.Form):\n\tcard_name =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Name On Card'}), required=True)\n\tcard_number =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Card Number'}), required=True)\n\tcard_exp_date =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Expiration Date'}), required=True)\n\tcard_cvv_number =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'CVV Code'}), required=True)",
        "detail": "payment.forms",
        "documentation": {}
    },
    {
        "label": "\t\tmodel",
        "kind": 5,
        "importPath": "payment.forms",
        "description": "payment.forms",
        "peekOfCode": "\t\tmodel = ShippingAddress\n\t\tfields = ['shipping_full_name', 'shipping_email', 'shipping_address1', 'shipping_address2', 'shipping_city']\n\t\texclude = ['user',]\nclass PaymentForm(forms.Form):\n\tcard_name =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Name On Card'}), required=True)\n\tcard_number =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Card Number'}), required=True)\n\tcard_exp_date =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Expiration Date'}), required=True)\n\tcard_cvv_number =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'CVV Code'}), required=True)\n\tcard_address1 =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing Address 1'}), required=True)\n\tcard_address2 =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing Address 2'}), required=False)",
        "detail": "payment.forms",
        "documentation": {}
    },
    {
        "label": "\t\tfields",
        "kind": 5,
        "importPath": "payment.forms",
        "description": "payment.forms",
        "peekOfCode": "\t\tfields = ['shipping_full_name', 'shipping_email', 'shipping_address1', 'shipping_address2', 'shipping_city']\n\t\texclude = ['user',]\nclass PaymentForm(forms.Form):\n\tcard_name =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Name On Card'}), required=True)\n\tcard_number =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Card Number'}), required=True)\n\tcard_exp_date =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Expiration Date'}), required=True)\n\tcard_cvv_number =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'CVV Code'}), required=True)\n\tcard_address1 =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing Address 1'}), required=True)\n\tcard_address2 =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing Address 2'}), required=False)\n\tcard_city =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing City'}), required=True)",
        "detail": "payment.forms",
        "documentation": {}
    },
    {
        "label": "\t\texclude",
        "kind": 5,
        "importPath": "payment.forms",
        "description": "payment.forms",
        "peekOfCode": "\t\texclude = ['user',]\nclass PaymentForm(forms.Form):\n\tcard_name =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Name On Card'}), required=True)\n\tcard_number =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Card Number'}), required=True)\n\tcard_exp_date =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Expiration Date'}), required=True)\n\tcard_cvv_number =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'CVV Code'}), required=True)\n\tcard_address1 =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing Address 1'}), required=True)\n\tcard_address2 =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing Address 2'}), required=False)\n\tcard_city =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing City'}), required=True)",
        "detail": "payment.forms",
        "documentation": {}
    },
    {
        "label": "\tcard_name",
        "kind": 5,
        "importPath": "payment.forms",
        "description": "payment.forms",
        "peekOfCode": "\tcard_name =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Name On Card'}), required=True)\n\tcard_number =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Card Number'}), required=True)\n\tcard_exp_date =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Expiration Date'}), required=True)\n\tcard_cvv_number =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'CVV Code'}), required=True)\n\tcard_address1 =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing Address 1'}), required=True)\n\tcard_address2 =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing Address 2'}), required=False)\n\tcard_city =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing City'}), required=True)",
        "detail": "payment.forms",
        "documentation": {}
    },
    {
        "label": "\tcard_number",
        "kind": 5,
        "importPath": "payment.forms",
        "description": "payment.forms",
        "peekOfCode": "\tcard_number =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Card Number'}), required=True)\n\tcard_exp_date =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Expiration Date'}), required=True)\n\tcard_cvv_number =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'CVV Code'}), required=True)\n\tcard_address1 =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing Address 1'}), required=True)\n\tcard_address2 =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing Address 2'}), required=False)\n\tcard_city =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing City'}), required=True)",
        "detail": "payment.forms",
        "documentation": {}
    },
    {
        "label": "\tcard_exp_date",
        "kind": 5,
        "importPath": "payment.forms",
        "description": "payment.forms",
        "peekOfCode": "\tcard_exp_date =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Expiration Date'}), required=True)\n\tcard_cvv_number =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'CVV Code'}), required=True)\n\tcard_address1 =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing Address 1'}), required=True)\n\tcard_address2 =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing Address 2'}), required=False)\n\tcard_city =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing City'}), required=True)",
        "detail": "payment.forms",
        "documentation": {}
    },
    {
        "label": "\tcard_cvv_number",
        "kind": 5,
        "importPath": "payment.forms",
        "description": "payment.forms",
        "peekOfCode": "\tcard_cvv_number =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'CVV Code'}), required=True)\n\tcard_address1 =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing Address 1'}), required=True)\n\tcard_address2 =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing Address 2'}), required=False)\n\tcard_city =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing City'}), required=True)",
        "detail": "payment.forms",
        "documentation": {}
    },
    {
        "label": "\tcard_address1",
        "kind": 5,
        "importPath": "payment.forms",
        "description": "payment.forms",
        "peekOfCode": "\tcard_address1 =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing Address 1'}), required=True)\n\tcard_address2 =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing Address 2'}), required=False)\n\tcard_city =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing City'}), required=True)",
        "detail": "payment.forms",
        "documentation": {}
    },
    {
        "label": "\tcard_address2",
        "kind": 5,
        "importPath": "payment.forms",
        "description": "payment.forms",
        "peekOfCode": "\tcard_address2 =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing Address 2'}), required=False)\n\tcard_city =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing City'}), required=True)",
        "detail": "payment.forms",
        "documentation": {}
    },
    {
        "label": "\tcard_city",
        "kind": 5,
        "importPath": "payment.forms",
        "description": "payment.forms",
        "peekOfCode": "\tcard_city =  forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Billing City'}), required=True)",
        "detail": "payment.forms",
        "documentation": {}
    },
    {
        "label": "ShippingAddress",
        "kind": 6,
        "importPath": "payment.models",
        "description": "payment.models",
        "peekOfCode": "class ShippingAddress(models.Model):\n\tuser = models.ForeignKey(User, on_delete=models.CASCADE, null=True, blank=True)\n\tshipping_full_name = models.CharField(max_length=255)\n\tshipping_email = models.CharField(max_length=255)\n\tshipping_address1 = models.CharField(max_length=255)\n\tshipping_address2 = models.CharField(max_length=255, null=True, blank=True)\n\tshipping_city = models.CharField(max_length=255)\n\t# Don't pluralize address\n\tclass Meta:\n\t\tverbose_name_plural = \"Shipping Address\"",
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "kind": 6,
        "importPath": "payment.models",
        "description": "payment.models",
        "peekOfCode": "class Order(models.Model):\n\t# Foreign Key\n\tuser = models.ForeignKey(User, on_delete=models.CASCADE, null=True, blank=True)\n\tfull_name = models.CharField(max_length=250)\n\temail = models.EmailField(max_length=250)\n\tshipping_address = models.TextField(max_length=15000)\n\tamount_paid = models.IntegerField(default=0)\n\tdate_ordered = models.DateTimeField(auto_now_add=True)\t\n\tdef __str__(self):\n\t\treturn f'Order - {str(self.id)}'",
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "OrderItem",
        "kind": 6,
        "importPath": "payment.models",
        "description": "payment.models",
        "peekOfCode": "class OrderItem(models.Model):\n\t# Foreign Keys\n\torder = models.ForeignKey(Order, on_delete=models.CASCADE, null=True)\n\tproduct = models.ForeignKey(Product, on_delete=models.CASCADE, null=True)\n\tuser = models.ForeignKey(User, on_delete=models.CASCADE, null=True, blank=True)\n\tquantity = models.PositiveBigIntegerField(default=1)\n\tprice = models.IntegerField(default=0)\n\tdef __str__(self):\n\t\treturn f'Order Item - {str(self.id)}'",
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "create_shipping",
        "kind": 2,
        "importPath": "payment.models",
        "description": "payment.models",
        "peekOfCode": "def create_shipping(sender, instance, created, **kwargs):\n\tif created:\n\t\tuser_shipping = ShippingAddress(user=instance)\n\t\tuser_shipping.save()\n# Automate the profile thing\npost_save.connect(create_shipping, sender=User)\n# Create Order Model\nclass Order(models.Model):\n\t# Foreign Key\n\tuser = models.ForeignKey(User, on_delete=models.CASCADE, null=True, blank=True)",
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "\tuser",
        "kind": 5,
        "importPath": "payment.models",
        "description": "payment.models",
        "peekOfCode": "\tuser = models.ForeignKey(User, on_delete=models.CASCADE, null=True, blank=True)\n\tshipping_full_name = models.CharField(max_length=255)\n\tshipping_email = models.CharField(max_length=255)\n\tshipping_address1 = models.CharField(max_length=255)\n\tshipping_address2 = models.CharField(max_length=255, null=True, blank=True)\n\tshipping_city = models.CharField(max_length=255)\n\t# Don't pluralize address\n\tclass Meta:\n\t\tverbose_name_plural = \"Shipping Address\"\n\tdef __str__(self):",
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "\tshipping_full_name",
        "kind": 5,
        "importPath": "payment.models",
        "description": "payment.models",
        "peekOfCode": "\tshipping_full_name = models.CharField(max_length=255)\n\tshipping_email = models.CharField(max_length=255)\n\tshipping_address1 = models.CharField(max_length=255)\n\tshipping_address2 = models.CharField(max_length=255, null=True, blank=True)\n\tshipping_city = models.CharField(max_length=255)\n\t# Don't pluralize address\n\tclass Meta:\n\t\tverbose_name_plural = \"Shipping Address\"\n\tdef __str__(self):\n\t\treturn f'Shipping Address - {str(self.id)}'",
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "\tshipping_email",
        "kind": 5,
        "importPath": "payment.models",
        "description": "payment.models",
        "peekOfCode": "\tshipping_email = models.CharField(max_length=255)\n\tshipping_address1 = models.CharField(max_length=255)\n\tshipping_address2 = models.CharField(max_length=255, null=True, blank=True)\n\tshipping_city = models.CharField(max_length=255)\n\t# Don't pluralize address\n\tclass Meta:\n\t\tverbose_name_plural = \"Shipping Address\"\n\tdef __str__(self):\n\t\treturn f'Shipping Address - {str(self.id)}'\n# Create a user Shipping Address by default when user signs up",
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "\tshipping_address1",
        "kind": 5,
        "importPath": "payment.models",
        "description": "payment.models",
        "peekOfCode": "\tshipping_address1 = models.CharField(max_length=255)\n\tshipping_address2 = models.CharField(max_length=255, null=True, blank=True)\n\tshipping_city = models.CharField(max_length=255)\n\t# Don't pluralize address\n\tclass Meta:\n\t\tverbose_name_plural = \"Shipping Address\"\n\tdef __str__(self):\n\t\treturn f'Shipping Address - {str(self.id)}'\n# Create a user Shipping Address by default when user signs up\ndef create_shipping(sender, instance, created, **kwargs):",
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "\tshipping_address2",
        "kind": 5,
        "importPath": "payment.models",
        "description": "payment.models",
        "peekOfCode": "\tshipping_address2 = models.CharField(max_length=255, null=True, blank=True)\n\tshipping_city = models.CharField(max_length=255)\n\t# Don't pluralize address\n\tclass Meta:\n\t\tverbose_name_plural = \"Shipping Address\"\n\tdef __str__(self):\n\t\treturn f'Shipping Address - {str(self.id)}'\n# Create a user Shipping Address by default when user signs up\ndef create_shipping(sender, instance, created, **kwargs):\n\tif created:",
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "\tshipping_city",
        "kind": 5,
        "importPath": "payment.models",
        "description": "payment.models",
        "peekOfCode": "\tshipping_city = models.CharField(max_length=255)\n\t# Don't pluralize address\n\tclass Meta:\n\t\tverbose_name_plural = \"Shipping Address\"\n\tdef __str__(self):\n\t\treturn f'Shipping Address - {str(self.id)}'\n# Create a user Shipping Address by default when user signs up\ndef create_shipping(sender, instance, created, **kwargs):\n\tif created:\n\t\tuser_shipping = ShippingAddress(user=instance)",
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "\t\tverbose_name_plural",
        "kind": 5,
        "importPath": "payment.models",
        "description": "payment.models",
        "peekOfCode": "\t\tverbose_name_plural = \"Shipping Address\"\n\tdef __str__(self):\n\t\treturn f'Shipping Address - {str(self.id)}'\n# Create a user Shipping Address by default when user signs up\ndef create_shipping(sender, instance, created, **kwargs):\n\tif created:\n\t\tuser_shipping = ShippingAddress(user=instance)\n\t\tuser_shipping.save()\n# Automate the profile thing\npost_save.connect(create_shipping, sender=User)",
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "\t\tuser_shipping",
        "kind": 5,
        "importPath": "payment.models",
        "description": "payment.models",
        "peekOfCode": "\t\tuser_shipping = ShippingAddress(user=instance)\n\t\tuser_shipping.save()\n# Automate the profile thing\npost_save.connect(create_shipping, sender=User)\n# Create Order Model\nclass Order(models.Model):\n\t# Foreign Key\n\tuser = models.ForeignKey(User, on_delete=models.CASCADE, null=True, blank=True)\n\tfull_name = models.CharField(max_length=250)\n\temail = models.EmailField(max_length=250)",
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "\tuser",
        "kind": 5,
        "importPath": "payment.models",
        "description": "payment.models",
        "peekOfCode": "\tuser = models.ForeignKey(User, on_delete=models.CASCADE, null=True, blank=True)\n\tfull_name = models.CharField(max_length=250)\n\temail = models.EmailField(max_length=250)\n\tshipping_address = models.TextField(max_length=15000)\n\tamount_paid = models.IntegerField(default=0)\n\tdate_ordered = models.DateTimeField(auto_now_add=True)\t\n\tdef __str__(self):\n\t\treturn f'Order - {str(self.id)}'\n# Create Order Items Model\nclass OrderItem(models.Model):",
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "\tfull_name",
        "kind": 5,
        "importPath": "payment.models",
        "description": "payment.models",
        "peekOfCode": "\tfull_name = models.CharField(max_length=250)\n\temail = models.EmailField(max_length=250)\n\tshipping_address = models.TextField(max_length=15000)\n\tamount_paid = models.IntegerField(default=0)\n\tdate_ordered = models.DateTimeField(auto_now_add=True)\t\n\tdef __str__(self):\n\t\treturn f'Order - {str(self.id)}'\n# Create Order Items Model\nclass OrderItem(models.Model):\n\t# Foreign Keys",
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "\temail",
        "kind": 5,
        "importPath": "payment.models",
        "description": "payment.models",
        "peekOfCode": "\temail = models.EmailField(max_length=250)\n\tshipping_address = models.TextField(max_length=15000)\n\tamount_paid = models.IntegerField(default=0)\n\tdate_ordered = models.DateTimeField(auto_now_add=True)\t\n\tdef __str__(self):\n\t\treturn f'Order - {str(self.id)}'\n# Create Order Items Model\nclass OrderItem(models.Model):\n\t# Foreign Keys\n\torder = models.ForeignKey(Order, on_delete=models.CASCADE, null=True)",
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "\tshipping_address",
        "kind": 5,
        "importPath": "payment.models",
        "description": "payment.models",
        "peekOfCode": "\tshipping_address = models.TextField(max_length=15000)\n\tamount_paid = models.IntegerField(default=0)\n\tdate_ordered = models.DateTimeField(auto_now_add=True)\t\n\tdef __str__(self):\n\t\treturn f'Order - {str(self.id)}'\n# Create Order Items Model\nclass OrderItem(models.Model):\n\t# Foreign Keys\n\torder = models.ForeignKey(Order, on_delete=models.CASCADE, null=True)\n\tproduct = models.ForeignKey(Product, on_delete=models.CASCADE, null=True)",
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "\tamount_paid",
        "kind": 5,
        "importPath": "payment.models",
        "description": "payment.models",
        "peekOfCode": "\tamount_paid = models.IntegerField(default=0)\n\tdate_ordered = models.DateTimeField(auto_now_add=True)\t\n\tdef __str__(self):\n\t\treturn f'Order - {str(self.id)}'\n# Create Order Items Model\nclass OrderItem(models.Model):\n\t# Foreign Keys\n\torder = models.ForeignKey(Order, on_delete=models.CASCADE, null=True)\n\tproduct = models.ForeignKey(Product, on_delete=models.CASCADE, null=True)\n\tuser = models.ForeignKey(User, on_delete=models.CASCADE, null=True, blank=True)",
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "\tdate_ordered",
        "kind": 5,
        "importPath": "payment.models",
        "description": "payment.models",
        "peekOfCode": "\tdate_ordered = models.DateTimeField(auto_now_add=True)\t\n\tdef __str__(self):\n\t\treturn f'Order - {str(self.id)}'\n# Create Order Items Model\nclass OrderItem(models.Model):\n\t# Foreign Keys\n\torder = models.ForeignKey(Order, on_delete=models.CASCADE, null=True)\n\tproduct = models.ForeignKey(Product, on_delete=models.CASCADE, null=True)\n\tuser = models.ForeignKey(User, on_delete=models.CASCADE, null=True, blank=True)\n\tquantity = models.PositiveBigIntegerField(default=1)",
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "\torder",
        "kind": 5,
        "importPath": "payment.models",
        "description": "payment.models",
        "peekOfCode": "\torder = models.ForeignKey(Order, on_delete=models.CASCADE, null=True)\n\tproduct = models.ForeignKey(Product, on_delete=models.CASCADE, null=True)\n\tuser = models.ForeignKey(User, on_delete=models.CASCADE, null=True, blank=True)\n\tquantity = models.PositiveBigIntegerField(default=1)\n\tprice = models.IntegerField(default=0)\n\tdef __str__(self):\n\t\treturn f'Order Item - {str(self.id)}'",
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "\tproduct",
        "kind": 5,
        "importPath": "payment.models",
        "description": "payment.models",
        "peekOfCode": "\tproduct = models.ForeignKey(Product, on_delete=models.CASCADE, null=True)\n\tuser = models.ForeignKey(User, on_delete=models.CASCADE, null=True, blank=True)\n\tquantity = models.PositiveBigIntegerField(default=1)\n\tprice = models.IntegerField(default=0)\n\tdef __str__(self):\n\t\treturn f'Order Item - {str(self.id)}'",
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "\tuser",
        "kind": 5,
        "importPath": "payment.models",
        "description": "payment.models",
        "peekOfCode": "\tuser = models.ForeignKey(User, on_delete=models.CASCADE, null=True, blank=True)\n\tquantity = models.PositiveBigIntegerField(default=1)\n\tprice = models.IntegerField(default=0)\n\tdef __str__(self):\n\t\treturn f'Order Item - {str(self.id)}'",
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "\tquantity",
        "kind": 5,
        "importPath": "payment.models",
        "description": "payment.models",
        "peekOfCode": "\tquantity = models.PositiveBigIntegerField(default=1)\n\tprice = models.IntegerField(default=0)\n\tdef __str__(self):\n\t\treturn f'Order Item - {str(self.id)}'",
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "\tprice",
        "kind": 5,
        "importPath": "payment.models",
        "description": "payment.models",
        "peekOfCode": "\tprice = models.IntegerField(default=0)\n\tdef __str__(self):\n\t\treturn f'Order Item - {str(self.id)}'",
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "payment.urls",
        "description": "payment.urls",
        "peekOfCode": "urlpatterns = [\n    path('payment_success', views.payment_success, name='payment_success'),\n    path('checkout', views.checkout, name='checkout'),\n    path('billing_info', views.billing_info, name=\"billing_info\"),\n    path('process_order', views.process_order, name=\"process_order\"),\n]",
        "detail": "payment.urls",
        "documentation": {}
    },
    {
        "label": "process_order",
        "kind": 2,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "def process_order(request):\n\tif request.POST:\n\t\t# Get the cart\n\t\tcart = Cart(request)\n\t\tcart_products = cart.get_prods\n\t\tquantities = cart.get_quants\n\t\ttotals = cart.cart_total()\n\t\t# Get Billing Info from the last page\n\t\tpayment_form = PaymentForm(request.POST or None)\n\t\t# Get Shipping Session Data",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "billing_info",
        "kind": 2,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "def billing_info(request):\n\tif request.POST:\n\t\t# Get the cart\n\t\tcart = Cart(request)\n\t\tcart_products = cart.get_prods\n\t\tquantities = cart.get_quants\n\t\ttotals = cart.cart_total()\n\t\t# Create a session with Shipping Info\n\t\tmy_shipping = request.POST\n\t\trequest.session['my_shipping'] = my_shipping",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "checkout",
        "kind": 2,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "def checkout(request):\n\t# Get the cart\n\tcart = Cart(request)\n\tcart_products = cart.get_prods\n\tquantities = cart.get_quants\n\ttotals = cart.cart_total()\n\tif request.user.is_authenticated:\n\t\t# Checkout as logged in user\n\t\t# Shipping User\n\t\tshipping_user = ShippingAddress.objects.get(user__id=request.user.id)",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "payment_success",
        "kind": 2,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "def payment_success(request):\n\treturn render(request, \"payment/payment_success.html\", {})",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\tcart",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\tcart = Cart(request)\n\t\tcart_products = cart.get_prods\n\t\tquantities = cart.get_quants\n\t\ttotals = cart.cart_total()\n\t\t# Get Billing Info from the last page\n\t\tpayment_form = PaymentForm(request.POST or None)\n\t\t# Get Shipping Session Data\n\t\tmy_shipping = request.session.get('my_shipping')\n\t\t# Gather Order Info\n\t\tfull_name = my_shipping['shipping_full_name']",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\tcart_products",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\tcart_products = cart.get_prods\n\t\tquantities = cart.get_quants\n\t\ttotals = cart.cart_total()\n\t\t# Get Billing Info from the last page\n\t\tpayment_form = PaymentForm(request.POST or None)\n\t\t# Get Shipping Session Data\n\t\tmy_shipping = request.session.get('my_shipping')\n\t\t# Gather Order Info\n\t\tfull_name = my_shipping['shipping_full_name']\n\t\temail = my_shipping['shipping_email']",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\tquantities",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\tquantities = cart.get_quants\n\t\ttotals = cart.cart_total()\n\t\t# Get Billing Info from the last page\n\t\tpayment_form = PaymentForm(request.POST or None)\n\t\t# Get Shipping Session Data\n\t\tmy_shipping = request.session.get('my_shipping')\n\t\t# Gather Order Info\n\t\tfull_name = my_shipping['shipping_full_name']\n\t\temail = my_shipping['shipping_email']\n\t\t# Create Shipping Address from session info",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\ttotals",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\ttotals = cart.cart_total()\n\t\t# Get Billing Info from the last page\n\t\tpayment_form = PaymentForm(request.POST or None)\n\t\t# Get Shipping Session Data\n\t\tmy_shipping = request.session.get('my_shipping')\n\t\t# Gather Order Info\n\t\tfull_name = my_shipping['shipping_full_name']\n\t\temail = my_shipping['shipping_email']\n\t\t# Create Shipping Address from session info\n\t\tshipping_address = f\"{my_shipping['shipping_address1']}\\n{my_shipping['shipping_address2']}\\n{my_shipping['shipping_city']}\"",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\tpayment_form",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\tpayment_form = PaymentForm(request.POST or None)\n\t\t# Get Shipping Session Data\n\t\tmy_shipping = request.session.get('my_shipping')\n\t\t# Gather Order Info\n\t\tfull_name = my_shipping['shipping_full_name']\n\t\temail = my_shipping['shipping_email']\n\t\t# Create Shipping Address from session info\n\t\tshipping_address = f\"{my_shipping['shipping_address1']}\\n{my_shipping['shipping_address2']}\\n{my_shipping['shipping_city']}\"\n\t\tamount_paid = totals\n\t\t# Create an Order",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\tmy_shipping",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\tmy_shipping = request.session.get('my_shipping')\n\t\t# Gather Order Info\n\t\tfull_name = my_shipping['shipping_full_name']\n\t\temail = my_shipping['shipping_email']\n\t\t# Create Shipping Address from session info\n\t\tshipping_address = f\"{my_shipping['shipping_address1']}\\n{my_shipping['shipping_address2']}\\n{my_shipping['shipping_city']}\"\n\t\tamount_paid = totals\n\t\t# Create an Order\n\t\tif request.user.is_authenticated:\n\t\t\t# logged in",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\tfull_name",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\tfull_name = my_shipping['shipping_full_name']\n\t\temail = my_shipping['shipping_email']\n\t\t# Create Shipping Address from session info\n\t\tshipping_address = f\"{my_shipping['shipping_address1']}\\n{my_shipping['shipping_address2']}\\n{my_shipping['shipping_city']}\"\n\t\tamount_paid = totals\n\t\t# Create an Order\n\t\tif request.user.is_authenticated:\n\t\t\t# logged in\n\t\t\tuser = request.user\n\t\t\t# Create Order",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\temail",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\temail = my_shipping['shipping_email']\n\t\t# Create Shipping Address from session info\n\t\tshipping_address = f\"{my_shipping['shipping_address1']}\\n{my_shipping['shipping_address2']}\\n{my_shipping['shipping_city']}\"\n\t\tamount_paid = totals\n\t\t# Create an Order\n\t\tif request.user.is_authenticated:\n\t\t\t# logged in\n\t\t\tuser = request.user\n\t\t\t# Create Order\n\t\t\tcreate_order = Order(user=user, full_name=full_name, email=email, shipping_address=shipping_address, amount_paid=amount_paid)",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\tshipping_address",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\tshipping_address = f\"{my_shipping['shipping_address1']}\\n{my_shipping['shipping_address2']}\\n{my_shipping['shipping_city']}\"\n\t\tamount_paid = totals\n\t\t# Create an Order\n\t\tif request.user.is_authenticated:\n\t\t\t# logged in\n\t\t\tuser = request.user\n\t\t\t# Create Order\n\t\t\tcreate_order = Order(user=user, full_name=full_name, email=email, shipping_address=shipping_address, amount_paid=amount_paid)\n\t\t\tcreate_order.save()\n\t\t\t# Add order items",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\tamount_paid",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\tamount_paid = totals\n\t\t# Create an Order\n\t\tif request.user.is_authenticated:\n\t\t\t# logged in\n\t\t\tuser = request.user\n\t\t\t# Create Order\n\t\t\tcreate_order = Order(user=user, full_name=full_name, email=email, shipping_address=shipping_address, amount_paid=amount_paid)\n\t\t\tcreate_order.save()\n\t\t\t# Add order items\n\t\t\t# Get the order ID",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\t\tuser",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\t\tuser = request.user\n\t\t\t# Create Order\n\t\t\tcreate_order = Order(user=user, full_name=full_name, email=email, shipping_address=shipping_address, amount_paid=amount_paid)\n\t\t\tcreate_order.save()\n\t\t\t# Add order items\n\t\t\t# Get the order ID\n\t\t\torder_id = create_order.pk\n\t\t\t# Get product Info\n\t\t\tfor product in cart_products():\n\t\t\t\t# Get product ID",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\t\tcreate_order",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\t\tcreate_order = Order(user=user, full_name=full_name, email=email, shipping_address=shipping_address, amount_paid=amount_paid)\n\t\t\tcreate_order.save()\n\t\t\t# Add order items\n\t\t\t# Get the order ID\n\t\t\torder_id = create_order.pk\n\t\t\t# Get product Info\n\t\t\tfor product in cart_products():\n\t\t\t\t# Get product ID\n\t\t\t\tproduct_id = product.id\n\t\t\t\t# Get product price",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\t\torder_id",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\t\torder_id = create_order.pk\n\t\t\t# Get product Info\n\t\t\tfor product in cart_products():\n\t\t\t\t# Get product ID\n\t\t\t\tproduct_id = product.id\n\t\t\t\t# Get product price\n\t\t\t\tprice = product.price\n\t\t\t\t# Get quantity\n\t\t\t\tfor key,value in quantities().items():\n\t\t\t\t\tif int(key) == product.id:",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tproduct_id",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\t\t\tproduct_id = product.id\n\t\t\t\t# Get product price\n\t\t\t\tprice = product.price\n\t\t\t\t# Get quantity\n\t\t\t\tfor key,value in quantities().items():\n\t\t\t\t\tif int(key) == product.id:\n\t\t\t\t\t\t# Create order item\n\t\t\t\t\t\tcreate_order_item = OrderItem(order_id=order_id, product_id=product_id, user=user, quantity=value, price=price)\n\t\t\t\t\t\tcreate_order_item.save()\n\t\t\tmessages.success(request, \"Order Placed!\")",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tprice",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\t\t\tprice = product.price\n\t\t\t\t# Get quantity\n\t\t\t\tfor key,value in quantities().items():\n\t\t\t\t\tif int(key) == product.id:\n\t\t\t\t\t\t# Create order item\n\t\t\t\t\t\tcreate_order_item = OrderItem(order_id=order_id, product_id=product_id, user=user, quantity=value, price=price)\n\t\t\t\t\t\tcreate_order_item.save()\n\t\t\tmessages.success(request, \"Order Placed!\")\n\t\t\treturn redirect('home')\n\t\telse:",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\t\tcreate_order_item",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\t\t\t\t\tcreate_order_item = OrderItem(order_id=order_id, product_id=product_id, user=user, quantity=value, price=price)\n\t\t\t\t\t\tcreate_order_item.save()\n\t\t\tmessages.success(request, \"Order Placed!\")\n\t\t\treturn redirect('home')\n\t\telse:\n\t\t\t# not logged in\n\t\t\t# Create Order\n\t\t\tcreate_order = Order(full_name=full_name, email=email, shipping_address=shipping_address, amount_paid=amount_paid)\n\t\t\tcreate_order.save()\n\t\t\t# Add order items",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\t\tcreate_order",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\t\tcreate_order = Order(full_name=full_name, email=email, shipping_address=shipping_address, amount_paid=amount_paid)\n\t\t\tcreate_order.save()\n\t\t\t# Add order items\n\t\t\t# Get the order ID\n\t\t\torder_id = create_order.pk\n\t\t\t# Get product Info\n\t\t\tfor product in cart_products():\n\t\t\t\t# Get product ID\n\t\t\t\tproduct_id = product.id\n\t\t\t\t# Get product price",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\t\torder_id",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\t\torder_id = create_order.pk\n\t\t\t# Get product Info\n\t\t\tfor product in cart_products():\n\t\t\t\t# Get product ID\n\t\t\t\tproduct_id = product.id\n\t\t\t\t# Get product price\n\t\t\t\tprice = product.price\n\t\t\t\t# Get quantity\n\t\t\t\tfor key,value in quantities().items():\n\t\t\t\t\tif int(key) == product.id:",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tproduct_id",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\t\t\tproduct_id = product.id\n\t\t\t\t# Get product price\n\t\t\t\tprice = product.price\n\t\t\t\t# Get quantity\n\t\t\t\tfor key,value in quantities().items():\n\t\t\t\t\tif int(key) == product.id:\n\t\t\t\t\t\t# Create order item\n\t\t\t\t\t\tcreate_order_item = OrderItem(order_id=order_id, product_id=product_id, quantity=value, price=price)\n\t\t\t\t\t\tcreate_order_item.save()\n\t\t\tmessages.success(request, \"Order Placed!\")",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tprice",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\t\t\tprice = product.price\n\t\t\t\t# Get quantity\n\t\t\t\tfor key,value in quantities().items():\n\t\t\t\t\tif int(key) == product.id:\n\t\t\t\t\t\t# Create order item\n\t\t\t\t\t\tcreate_order_item = OrderItem(order_id=order_id, product_id=product_id, quantity=value, price=price)\n\t\t\t\t\t\tcreate_order_item.save()\n\t\t\tmessages.success(request, \"Order Placed!\")\n\t\t\treturn redirect('home')\n\telse:",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\t\tcreate_order_item",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\t\t\t\t\tcreate_order_item = OrderItem(order_id=order_id, product_id=product_id, quantity=value, price=price)\n\t\t\t\t\t\tcreate_order_item.save()\n\t\t\tmessages.success(request, \"Order Placed!\")\n\t\t\treturn redirect('home')\n\telse:\n\t\tmessages.success(request, \"Access Denied\")\n\t\treturn redirect('home')\ndef billing_info(request):\n\tif request.POST:\n\t\t# Get the cart",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\tcart",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\tcart = Cart(request)\n\t\tcart_products = cart.get_prods\n\t\tquantities = cart.get_quants\n\t\ttotals = cart.cart_total()\n\t\t# Create a session with Shipping Info\n\t\tmy_shipping = request.POST\n\t\trequest.session['my_shipping'] = my_shipping\n\t\t# Check to see if user is logged in\n\t\tif request.user.is_authenticated:\n\t\t\t# Get The Billing Form",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\tcart_products",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\tcart_products = cart.get_prods\n\t\tquantities = cart.get_quants\n\t\ttotals = cart.cart_total()\n\t\t# Create a session with Shipping Info\n\t\tmy_shipping = request.POST\n\t\trequest.session['my_shipping'] = my_shipping\n\t\t# Check to see if user is logged in\n\t\tif request.user.is_authenticated:\n\t\t\t# Get The Billing Form\n\t\t\tbilling_form = PaymentForm()",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\tquantities",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\tquantities = cart.get_quants\n\t\ttotals = cart.cart_total()\n\t\t# Create a session with Shipping Info\n\t\tmy_shipping = request.POST\n\t\trequest.session['my_shipping'] = my_shipping\n\t\t# Check to see if user is logged in\n\t\tif request.user.is_authenticated:\n\t\t\t# Get The Billing Form\n\t\t\tbilling_form = PaymentForm()\n\t\t\treturn render(request, \"payment/billing_info.html\", {\"cart_products\":cart_products, \"quantities\":quantities, \"totals\":totals, \"shipping_info\":request.POST, \"billing_form\":billing_form})",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\ttotals",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\ttotals = cart.cart_total()\n\t\t# Create a session with Shipping Info\n\t\tmy_shipping = request.POST\n\t\trequest.session['my_shipping'] = my_shipping\n\t\t# Check to see if user is logged in\n\t\tif request.user.is_authenticated:\n\t\t\t# Get The Billing Form\n\t\t\tbilling_form = PaymentForm()\n\t\t\treturn render(request, \"payment/billing_info.html\", {\"cart_products\":cart_products, \"quantities\":quantities, \"totals\":totals, \"shipping_info\":request.POST, \"billing_form\":billing_form})\n\t\telse:",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\tmy_shipping",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\tmy_shipping = request.POST\n\t\trequest.session['my_shipping'] = my_shipping\n\t\t# Check to see if user is logged in\n\t\tif request.user.is_authenticated:\n\t\t\t# Get The Billing Form\n\t\t\tbilling_form = PaymentForm()\n\t\t\treturn render(request, \"payment/billing_info.html\", {\"cart_products\":cart_products, \"quantities\":quantities, \"totals\":totals, \"shipping_info\":request.POST, \"billing_form\":billing_form})\n\t\telse:\n\t\t\t# Not logged in\n\t\t\t# Get The Billing Form",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\trequest.session['my_shipping']",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\trequest.session['my_shipping'] = my_shipping\n\t\t# Check to see if user is logged in\n\t\tif request.user.is_authenticated:\n\t\t\t# Get The Billing Form\n\t\t\tbilling_form = PaymentForm()\n\t\t\treturn render(request, \"payment/billing_info.html\", {\"cart_products\":cart_products, \"quantities\":quantities, \"totals\":totals, \"shipping_info\":request.POST, \"billing_form\":billing_form})\n\t\telse:\n\t\t\t# Not logged in\n\t\t\t# Get The Billing Form\n\t\t\tbilling_form = PaymentForm()",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\t\tbilling_form",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\t\tbilling_form = PaymentForm()\n\t\t\treturn render(request, \"payment/billing_info.html\", {\"cart_products\":cart_products, \"quantities\":quantities, \"totals\":totals, \"shipping_info\":request.POST, \"billing_form\":billing_form})\n\t\telse:\n\t\t\t# Not logged in\n\t\t\t# Get The Billing Form\n\t\t\tbilling_form = PaymentForm()\n\t\t\treturn render(request, \"payment/billing_info.html\", {\"cart_products\":cart_products, \"quantities\":quantities, \"totals\":totals, \"shipping_info\":request.POST, \"billing_form\":billing_form})\n\t\tshipping_form = request.POST\n\t\treturn render(request, \"payment/billing_info.html\", {\"cart_products\":cart_products, \"quantities\":quantities, \"totals\":totals, \"shipping_form\":shipping_form})\t\n\telse:",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\t\tbilling_form",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\t\tbilling_form = PaymentForm()\n\t\t\treturn render(request, \"payment/billing_info.html\", {\"cart_products\":cart_products, \"quantities\":quantities, \"totals\":totals, \"shipping_info\":request.POST, \"billing_form\":billing_form})\n\t\tshipping_form = request.POST\n\t\treturn render(request, \"payment/billing_info.html\", {\"cart_products\":cart_products, \"quantities\":quantities, \"totals\":totals, \"shipping_form\":shipping_form})\t\n\telse:\n\t\tmessages.success(request, \"Access Denied\")\n\t\treturn redirect('home')\ndef checkout(request):\n\t# Get the cart\n\tcart = Cart(request)",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\tshipping_form",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\tshipping_form = request.POST\n\t\treturn render(request, \"payment/billing_info.html\", {\"cart_products\":cart_products, \"quantities\":quantities, \"totals\":totals, \"shipping_form\":shipping_form})\t\n\telse:\n\t\tmessages.success(request, \"Access Denied\")\n\t\treturn redirect('home')\ndef checkout(request):\n\t# Get the cart\n\tcart = Cart(request)\n\tcart_products = cart.get_prods\n\tquantities = cart.get_quants",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\tcart",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\tcart = Cart(request)\n\tcart_products = cart.get_prods\n\tquantities = cart.get_quants\n\ttotals = cart.cart_total()\n\tif request.user.is_authenticated:\n\t\t# Checkout as logged in user\n\t\t# Shipping User\n\t\tshipping_user = ShippingAddress.objects.get(user__id=request.user.id)\n\t\t# Shipping Form\n\t\tshipping_form = ShippingForm(request.POST or None, instance=shipping_user)",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\tcart_products",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\tcart_products = cart.get_prods\n\tquantities = cart.get_quants\n\ttotals = cart.cart_total()\n\tif request.user.is_authenticated:\n\t\t# Checkout as logged in user\n\t\t# Shipping User\n\t\tshipping_user = ShippingAddress.objects.get(user__id=request.user.id)\n\t\t# Shipping Form\n\t\tshipping_form = ShippingForm(request.POST or None, instance=shipping_user)\n\t\treturn render(request, \"payment/checkout.html\", {\"cart_products\":cart_products, \"quantities\":quantities, \"totals\":totals, \"shipping_form\":shipping_form })",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\tquantities",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\tquantities = cart.get_quants\n\ttotals = cart.cart_total()\n\tif request.user.is_authenticated:\n\t\t# Checkout as logged in user\n\t\t# Shipping User\n\t\tshipping_user = ShippingAddress.objects.get(user__id=request.user.id)\n\t\t# Shipping Form\n\t\tshipping_form = ShippingForm(request.POST or None, instance=shipping_user)\n\t\treturn render(request, \"payment/checkout.html\", {\"cart_products\":cart_products, \"quantities\":quantities, \"totals\":totals, \"shipping_form\":shipping_form })\n\telse:",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\ttotals",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\ttotals = cart.cart_total()\n\tif request.user.is_authenticated:\n\t\t# Checkout as logged in user\n\t\t# Shipping User\n\t\tshipping_user = ShippingAddress.objects.get(user__id=request.user.id)\n\t\t# Shipping Form\n\t\tshipping_form = ShippingForm(request.POST or None, instance=shipping_user)\n\t\treturn render(request, \"payment/checkout.html\", {\"cart_products\":cart_products, \"quantities\":quantities, \"totals\":totals, \"shipping_form\":shipping_form })\n\telse:\n\t\t# Checkout as guest",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\tshipping_user",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\tshipping_user = ShippingAddress.objects.get(user__id=request.user.id)\n\t\t# Shipping Form\n\t\tshipping_form = ShippingForm(request.POST or None, instance=shipping_user)\n\t\treturn render(request, \"payment/checkout.html\", {\"cart_products\":cart_products, \"quantities\":quantities, \"totals\":totals, \"shipping_form\":shipping_form })\n\telse:\n\t\t# Checkout as guest\n\t\tshipping_form = ShippingForm(request.POST or None)\n\t\treturn render(request, \"payment/checkout.html\", {\"cart_products\":cart_products, \"quantities\":quantities, \"totals\":totals, \"shipping_form\":shipping_form})\ndef payment_success(request):\n\treturn render(request, \"payment/payment_success.html\", {})",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\tshipping_form",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\tshipping_form = ShippingForm(request.POST or None, instance=shipping_user)\n\t\treturn render(request, \"payment/checkout.html\", {\"cart_products\":cart_products, \"quantities\":quantities, \"totals\":totals, \"shipping_form\":shipping_form })\n\telse:\n\t\t# Checkout as guest\n\t\tshipping_form = ShippingForm(request.POST or None)\n\t\treturn render(request, \"payment/checkout.html\", {\"cart_products\":cart_products, \"quantities\":quantities, \"totals\":totals, \"shipping_form\":shipping_form})\ndef payment_success(request):\n\treturn render(request, \"payment/payment_success.html\", {})",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "\t\tshipping_form",
        "kind": 5,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "\t\tshipping_form = ShippingForm(request.POST or None)\n\t\treturn render(request, \"payment/checkout.html\", {\"cart_products\":cart_products, \"quantities\":quantities, \"totals\":totals, \"shipping_form\":shipping_form})\ndef payment_success(request):\n\treturn render(request, \"payment/payment_success.html\", {})",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "Command",
        "kind": 6,
        "importPath": "store.management.commands.add_data",
        "description": "store.management.commands.add_data",
        "peekOfCode": "class Command(BaseCommand):\n    def handle(self, *args: Any, **options: Any) -> str | None:\n        # csv_file = 'data_products/crawled_data_the_thao_da_ngoai.csv'\n        csv_file = 'data_comments_all_fixed.csv'\n        # dien_thoai_may_tinh_bang\n        # do_choi_me_be\n        # dien_gia_dung\n        # nha_cua_doi_song\n        # thoi_trang_nu\n        # thiet_bi_kts_phu_kien_so",
        "detail": "store.management.commands.add_data",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "store.migrations.0001_initial",
        "description": "store.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Category',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=50)),",
        "detail": "store.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "store.migrations.0002_alter_category_options_product_is_sale_and_more",
        "description": "store.migrations.0002_alter_category_options_product_is_sale_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='category',\n            options={'verbose_name_plural': 'categories'},\n        ),\n        migrations.AddField(",
        "detail": "store.migrations.0002_alter_category_options_product_is_sale_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "store.migrations.0003_profile",
        "description": "store.migrations.0003_profile",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('store', '0002_alter_category_options_product_is_sale_and_more'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Profile',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "store.migrations.0003_profile",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "store.migrations.0004_profile_old_cart",
        "description": "store.migrations.0004_profile_old_cart",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0003_profile'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='profile',\n            name='old_cart',\n            field=models.CharField(blank=True, max_length=200, null=True),\n        ),",
        "detail": "store.migrations.0004_profile_old_cart",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "store.migrations.0005_alter_product_image_alter_product_price",
        "description": "store.migrations.0005_alter_product_image_alter_product_price",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0004_profile_old_cart'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='image',\n            field=models.CharField(max_length=100),\n        ),",
        "detail": "store.migrations.0005_alter_product_image_alter_product_price",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "store.migrations.0006_product_tiki_product_id",
        "description": "store.migrations.0006_product_tiki_product_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0005_alter_product_image_alter_product_price'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='product',\n            name='tiki_product_id',\n            field=models.IntegerField(default=0),\n        ),",
        "detail": "store.migrations.0006_product_tiki_product_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "store.migrations.0007_remove_product_is_sale_remove_product_sale_price",
        "description": "store.migrations.0007_remove_product_is_sale_remove_product_sale_price",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0006_product_tiki_product_id'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='product',\n            name='is_sale',\n        ),\n        migrations.RemoveField(",
        "detail": "store.migrations.0007_remove_product_is_sale_remove_product_sale_price",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "store.migrations.0008_product_brand_id_product_brand_name",
        "description": "store.migrations.0008_product_brand_id_product_brand_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0007_remove_product_is_sale_remove_product_sale_price'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='product',\n            name='brand_id',\n            field=models.IntegerField(default=0),\n        ),",
        "detail": "store.migrations.0008_product_brand_id_product_brand_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "store.migrations.0009_remove_profile_country_remove_profile_old_cart_and_more",
        "description": "store.migrations.0009_remove_profile_country_remove_profile_old_cart_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0008_product_brand_id_product_brand_name'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='profile',\n            name='country',\n        ),\n        migrations.RemoveField(",
        "detail": "store.migrations.0009_remove_profile_country_remove_profile_old_cart_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "store.migrations.0010_remove_profile_state_profile_old_cart",
        "description": "store.migrations.0010_remove_profile_state_profile_old_cart",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0009_remove_profile_country_remove_profile_old_cart_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='profile',\n            name='state',\n        ),\n        migrations.AddField(",
        "detail": "store.migrations.0010_remove_profile_state_profile_old_cart",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "store.migrations.0011_alter_product_tiki_product_id",
        "description": "store.migrations.0011_alter_product_tiki_product_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0010_remove_profile_state_profile_old_cart'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='tiki_product_id',\n            field=models.IntegerField(unique=True),\n        ),",
        "detail": "store.migrations.0011_alter_product_tiki_product_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "store.migrations.0012_remove_product_tiki_product_id",
        "description": "store.migrations.0012_remove_product_tiki_product_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0011_alter_product_tiki_product_id'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='product',\n            name='tiki_product_id',\n        ),\n    ]",
        "detail": "store.migrations.0012_remove_product_tiki_product_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "store.migrations.0013_product_tiki_product_id",
        "description": "store.migrations.0013_product_tiki_product_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0012_remove_product_tiki_product_id'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='product',\n            name='tiki_product_id',\n            field=models.IntegerField(default=0, unique=True),\n        ),",
        "detail": "store.migrations.0013_product_tiki_product_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "store.migrations.0014_rating",
        "description": "store.migrations.0014_rating",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0013_product_tiki_product_id'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Rating',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.CharField(default='', max_length=100)),",
        "detail": "store.migrations.0014_rating",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "store.migrations.0015_alter_product_price",
        "description": "store.migrations.0015_alter_product_price",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0014_rating'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='price',\n            field=models.IntegerField(default=0),\n        ),",
        "detail": "store.migrations.0015_alter_product_price",
        "documentation": {}
    },
    {
        "label": "ProfileInline",
        "kind": 6,
        "importPath": "store.admin",
        "description": "store.admin",
        "peekOfCode": "class ProfileInline(admin.StackedInline):\n\tmodel = Profile\n# Extend User Model\nclass UserAdmin(admin.ModelAdmin):\n\tmodel = User\n\tfield = [\"username\", \"first_name\", \"last_name\", \"email\"]\n\tinlines = [ProfileInline]\n# Unregister the old way\nadmin.site.unregister(User)\n# Re-Register the new way",
        "detail": "store.admin",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "kind": 6,
        "importPath": "store.admin",
        "description": "store.admin",
        "peekOfCode": "class UserAdmin(admin.ModelAdmin):\n\tmodel = User\n\tfield = [\"username\", \"first_name\", \"last_name\", \"email\"]\n\tinlines = [ProfileInline]\n# Unregister the old way\nadmin.site.unregister(User)\n# Re-Register the new way\nadmin.site.register(User, UserAdmin)",
        "detail": "store.admin",
        "documentation": {}
    },
    {
        "label": "\tmodel",
        "kind": 5,
        "importPath": "store.admin",
        "description": "store.admin",
        "peekOfCode": "\tmodel = Profile\n# Extend User Model\nclass UserAdmin(admin.ModelAdmin):\n\tmodel = User\n\tfield = [\"username\", \"first_name\", \"last_name\", \"email\"]\n\tinlines = [ProfileInline]\n# Unregister the old way\nadmin.site.unregister(User)\n# Re-Register the new way\nadmin.site.register(User, UserAdmin)",
        "detail": "store.admin",
        "documentation": {}
    },
    {
        "label": "\tmodel",
        "kind": 5,
        "importPath": "store.admin",
        "description": "store.admin",
        "peekOfCode": "\tmodel = User\n\tfield = [\"username\", \"first_name\", \"last_name\", \"email\"]\n\tinlines = [ProfileInline]\n# Unregister the old way\nadmin.site.unregister(User)\n# Re-Register the new way\nadmin.site.register(User, UserAdmin)",
        "detail": "store.admin",
        "documentation": {}
    },
    {
        "label": "\tfield",
        "kind": 5,
        "importPath": "store.admin",
        "description": "store.admin",
        "peekOfCode": "\tfield = [\"username\", \"first_name\", \"last_name\", \"email\"]\n\tinlines = [ProfileInline]\n# Unregister the old way\nadmin.site.unregister(User)\n# Re-Register the new way\nadmin.site.register(User, UserAdmin)",
        "detail": "store.admin",
        "documentation": {}
    },
    {
        "label": "\tinlines",
        "kind": 5,
        "importPath": "store.admin",
        "description": "store.admin",
        "peekOfCode": "\tinlines = [ProfileInline]\n# Unregister the old way\nadmin.site.unregister(User)\n# Re-Register the new way\nadmin.site.register(User, UserAdmin)",
        "detail": "store.admin",
        "documentation": {}
    },
    {
        "label": "StoreConfig",
        "kind": 6,
        "importPath": "store.apps",
        "description": "store.apps",
        "peekOfCode": "class StoreConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'store'",
        "detail": "store.apps",
        "documentation": {}
    },
    {
        "label": "UserInfoForm",
        "kind": 6,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "class UserInfoForm(forms.ModelForm):\n\tphone = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Phone'}), required=False)\n\taddress1 = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Address 1'}), required=False)\n\taddress2 = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Address 2'}), required=False)\n\tcity = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'City'}), required=False)\n\tclass Meta:\n\t\tmodel = Profile\n\t\tfields = ('phone', 'address1', 'address2', 'city' )\nclass ChangePasswordForm(SetPasswordForm):\n\tclass Meta:",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "ChangePasswordForm",
        "kind": 6,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "class ChangePasswordForm(SetPasswordForm):\n\tclass Meta:\n\t\tmodel = User\n\t\tfields = ['new_password1', 'new_password2']\n\tdef __init__(self, *args, **kwargs):\n\t\tsuper(ChangePasswordForm, self).__init__(*args, **kwargs)\n\t\tself.fields['new_password1'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['new_password1'].widget.attrs['placeholder'] = 'Password'\n\t\tself.fields['new_password1'].label = ''\n\t\tself.fields['new_password1'].help_text = '<ul class=\"form-text text-muted small\"><li>Your password can\\'t be too similar to your other personal information.</li><li>Your password must contain at least 8 characters.</li><li>Your password can\\'t be a commonly used password.</li><li>Your password can\\'t be entirely numeric.</li></ul>'",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "UpdateUserForm",
        "kind": 6,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "class UpdateUserForm(UserChangeForm):\n\t# Hide Password stuff\n\tpassword = None\n\t# Get other fields\n\temail = forms.EmailField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Email Address'}), required=False)\n\tfirst_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'First Name'}), required=False)\n\tlast_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Last Name'}), required=False)\n\tclass Meta:\n\t\tmodel = User\n\t\tfields = ('username', 'first_name', 'last_name', 'email')",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "SignUpForm",
        "kind": 6,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "class SignUpForm(UserCreationForm):\n\temail = forms.EmailField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Email Address'}))\n\tfirst_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'First Name'}))\n\tlast_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Last Name'}))\n\tclass Meta:\n\t\tmodel = User\n\t\tfields = ('username', 'first_name', 'last_name', 'email', 'password1', 'password2')\n\tdef __init__(self, *args, **kwargs):\n\t\tsuper(SignUpForm, self).__init__(*args, **kwargs)\n\t\tself.fields['username'].widget.attrs['class'] = 'form-control'",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\tphone",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\tphone = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Phone'}), required=False)\n\taddress1 = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Address 1'}), required=False)\n\taddress2 = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Address 2'}), required=False)\n\tcity = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'City'}), required=False)\n\tclass Meta:\n\t\tmodel = Profile\n\t\tfields = ('phone', 'address1', 'address2', 'city' )\nclass ChangePasswordForm(SetPasswordForm):\n\tclass Meta:\n\t\tmodel = User",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\taddress1",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\taddress1 = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Address 1'}), required=False)\n\taddress2 = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Address 2'}), required=False)\n\tcity = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'City'}), required=False)\n\tclass Meta:\n\t\tmodel = Profile\n\t\tfields = ('phone', 'address1', 'address2', 'city' )\nclass ChangePasswordForm(SetPasswordForm):\n\tclass Meta:\n\t\tmodel = User\n\t\tfields = ['new_password1', 'new_password2']",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\taddress2",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\taddress2 = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Address 2'}), required=False)\n\tcity = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'City'}), required=False)\n\tclass Meta:\n\t\tmodel = Profile\n\t\tfields = ('phone', 'address1', 'address2', 'city' )\nclass ChangePasswordForm(SetPasswordForm):\n\tclass Meta:\n\t\tmodel = User\n\t\tfields = ['new_password1', 'new_password2']\n\tdef __init__(self, *args, **kwargs):",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\tcity",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\tcity = forms.CharField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'City'}), required=False)\n\tclass Meta:\n\t\tmodel = Profile\n\t\tfields = ('phone', 'address1', 'address2', 'city' )\nclass ChangePasswordForm(SetPasswordForm):\n\tclass Meta:\n\t\tmodel = User\n\t\tfields = ['new_password1', 'new_password2']\n\tdef __init__(self, *args, **kwargs):\n\t\tsuper(ChangePasswordForm, self).__init__(*args, **kwargs)",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tmodel",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tmodel = Profile\n\t\tfields = ('phone', 'address1', 'address2', 'city' )\nclass ChangePasswordForm(SetPasswordForm):\n\tclass Meta:\n\t\tmodel = User\n\t\tfields = ['new_password1', 'new_password2']\n\tdef __init__(self, *args, **kwargs):\n\t\tsuper(ChangePasswordForm, self).__init__(*args, **kwargs)\n\t\tself.fields['new_password1'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['new_password1'].widget.attrs['placeholder'] = 'Password'",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tfields",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tfields = ('phone', 'address1', 'address2', 'city' )\nclass ChangePasswordForm(SetPasswordForm):\n\tclass Meta:\n\t\tmodel = User\n\t\tfields = ['new_password1', 'new_password2']\n\tdef __init__(self, *args, **kwargs):\n\t\tsuper(ChangePasswordForm, self).__init__(*args, **kwargs)\n\t\tself.fields['new_password1'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['new_password1'].widget.attrs['placeholder'] = 'Password'\n\t\tself.fields['new_password1'].label = ''",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tmodel",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tmodel = User\n\t\tfields = ['new_password1', 'new_password2']\n\tdef __init__(self, *args, **kwargs):\n\t\tsuper(ChangePasswordForm, self).__init__(*args, **kwargs)\n\t\tself.fields['new_password1'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['new_password1'].widget.attrs['placeholder'] = 'Password'\n\t\tself.fields['new_password1'].label = ''\n\t\tself.fields['new_password1'].help_text = '<ul class=\"form-text text-muted small\"><li>Your password can\\'t be too similar to your other personal information.</li><li>Your password must contain at least 8 characters.</li><li>Your password can\\'t be a commonly used password.</li><li>Your password can\\'t be entirely numeric.</li></ul>'\n\t\tself.fields['new_password2'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['new_password2'].widget.attrs['placeholder'] = 'Confirm Password'",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tfields",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tfields = ['new_password1', 'new_password2']\n\tdef __init__(self, *args, **kwargs):\n\t\tsuper(ChangePasswordForm, self).__init__(*args, **kwargs)\n\t\tself.fields['new_password1'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['new_password1'].widget.attrs['placeholder'] = 'Password'\n\t\tself.fields['new_password1'].label = ''\n\t\tself.fields['new_password1'].help_text = '<ul class=\"form-text text-muted small\"><li>Your password can\\'t be too similar to your other personal information.</li><li>Your password must contain at least 8 characters.</li><li>Your password can\\'t be a commonly used password.</li><li>Your password can\\'t be entirely numeric.</li></ul>'\n\t\tself.fields['new_password2'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['new_password2'].widget.attrs['placeholder'] = 'Confirm Password'\n\t\tself.fields['new_password2'].label = ''",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tself.fields['new_password1'].widget.attrs['class']",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tself.fields['new_password1'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['new_password1'].widget.attrs['placeholder'] = 'Password'\n\t\tself.fields['new_password1'].label = ''\n\t\tself.fields['new_password1'].help_text = '<ul class=\"form-text text-muted small\"><li>Your password can\\'t be too similar to your other personal information.</li><li>Your password must contain at least 8 characters.</li><li>Your password can\\'t be a commonly used password.</li><li>Your password can\\'t be entirely numeric.</li></ul>'\n\t\tself.fields['new_password2'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['new_password2'].widget.attrs['placeholder'] = 'Confirm Password'\n\t\tself.fields['new_password2'].label = ''\n\t\tself.fields['new_password2'].help_text = '<span class=\"form-text text-muted\"><small>Enter the same password as before, for verification.</small></span>'\nclass UpdateUserForm(UserChangeForm):\n\t# Hide Password stuff",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tself.fields['new_password1'].widget.attrs['placeholder']",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tself.fields['new_password1'].widget.attrs['placeholder'] = 'Password'\n\t\tself.fields['new_password1'].label = ''\n\t\tself.fields['new_password1'].help_text = '<ul class=\"form-text text-muted small\"><li>Your password can\\'t be too similar to your other personal information.</li><li>Your password must contain at least 8 characters.</li><li>Your password can\\'t be a commonly used password.</li><li>Your password can\\'t be entirely numeric.</li></ul>'\n\t\tself.fields['new_password2'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['new_password2'].widget.attrs['placeholder'] = 'Confirm Password'\n\t\tself.fields['new_password2'].label = ''\n\t\tself.fields['new_password2'].help_text = '<span class=\"form-text text-muted\"><small>Enter the same password as before, for verification.</small></span>'\nclass UpdateUserForm(UserChangeForm):\n\t# Hide Password stuff\n\tpassword = None",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tself.fields['new_password1'].label",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tself.fields['new_password1'].label = ''\n\t\tself.fields['new_password1'].help_text = '<ul class=\"form-text text-muted small\"><li>Your password can\\'t be too similar to your other personal information.</li><li>Your password must contain at least 8 characters.</li><li>Your password can\\'t be a commonly used password.</li><li>Your password can\\'t be entirely numeric.</li></ul>'\n\t\tself.fields['new_password2'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['new_password2'].widget.attrs['placeholder'] = 'Confirm Password'\n\t\tself.fields['new_password2'].label = ''\n\t\tself.fields['new_password2'].help_text = '<span class=\"form-text text-muted\"><small>Enter the same password as before, for verification.</small></span>'\nclass UpdateUserForm(UserChangeForm):\n\t# Hide Password stuff\n\tpassword = None\n\t# Get other fields",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tself.fields['new_password1'].help_text",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tself.fields['new_password1'].help_text = '<ul class=\"form-text text-muted small\"><li>Your password can\\'t be too similar to your other personal information.</li><li>Your password must contain at least 8 characters.</li><li>Your password can\\'t be a commonly used password.</li><li>Your password can\\'t be entirely numeric.</li></ul>'\n\t\tself.fields['new_password2'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['new_password2'].widget.attrs['placeholder'] = 'Confirm Password'\n\t\tself.fields['new_password2'].label = ''\n\t\tself.fields['new_password2'].help_text = '<span class=\"form-text text-muted\"><small>Enter the same password as before, for verification.</small></span>'\nclass UpdateUserForm(UserChangeForm):\n\t# Hide Password stuff\n\tpassword = None\n\t# Get other fields\n\temail = forms.EmailField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Email Address'}), required=False)",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tself.fields['new_password2'].widget.attrs['class']",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tself.fields['new_password2'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['new_password2'].widget.attrs['placeholder'] = 'Confirm Password'\n\t\tself.fields['new_password2'].label = ''\n\t\tself.fields['new_password2'].help_text = '<span class=\"form-text text-muted\"><small>Enter the same password as before, for verification.</small></span>'\nclass UpdateUserForm(UserChangeForm):\n\t# Hide Password stuff\n\tpassword = None\n\t# Get other fields\n\temail = forms.EmailField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Email Address'}), required=False)\n\tfirst_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'First Name'}), required=False)",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tself.fields['new_password2'].widget.attrs['placeholder']",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tself.fields['new_password2'].widget.attrs['placeholder'] = 'Confirm Password'\n\t\tself.fields['new_password2'].label = ''\n\t\tself.fields['new_password2'].help_text = '<span class=\"form-text text-muted\"><small>Enter the same password as before, for verification.</small></span>'\nclass UpdateUserForm(UserChangeForm):\n\t# Hide Password stuff\n\tpassword = None\n\t# Get other fields\n\temail = forms.EmailField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Email Address'}), required=False)\n\tfirst_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'First Name'}), required=False)\n\tlast_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Last Name'}), required=False)",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tself.fields['new_password2'].label",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tself.fields['new_password2'].label = ''\n\t\tself.fields['new_password2'].help_text = '<span class=\"form-text text-muted\"><small>Enter the same password as before, for verification.</small></span>'\nclass UpdateUserForm(UserChangeForm):\n\t# Hide Password stuff\n\tpassword = None\n\t# Get other fields\n\temail = forms.EmailField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Email Address'}), required=False)\n\tfirst_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'First Name'}), required=False)\n\tlast_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Last Name'}), required=False)\n\tclass Meta:",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tself.fields['new_password2'].help_text",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tself.fields['new_password2'].help_text = '<span class=\"form-text text-muted\"><small>Enter the same password as before, for verification.</small></span>'\nclass UpdateUserForm(UserChangeForm):\n\t# Hide Password stuff\n\tpassword = None\n\t# Get other fields\n\temail = forms.EmailField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Email Address'}), required=False)\n\tfirst_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'First Name'}), required=False)\n\tlast_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Last Name'}), required=False)\n\tclass Meta:\n\t\tmodel = User",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\tpassword",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\tpassword = None\n\t# Get other fields\n\temail = forms.EmailField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Email Address'}), required=False)\n\tfirst_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'First Name'}), required=False)\n\tlast_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Last Name'}), required=False)\n\tclass Meta:\n\t\tmodel = User\n\t\tfields = ('username', 'first_name', 'last_name', 'email')\n\tdef __init__(self, *args, **kwargs):\n\t\tsuper(UpdateUserForm, self).__init__(*args, **kwargs)",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\temail",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\temail = forms.EmailField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Email Address'}), required=False)\n\tfirst_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'First Name'}), required=False)\n\tlast_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Last Name'}), required=False)\n\tclass Meta:\n\t\tmodel = User\n\t\tfields = ('username', 'first_name', 'last_name', 'email')\n\tdef __init__(self, *args, **kwargs):\n\t\tsuper(UpdateUserForm, self).__init__(*args, **kwargs)\n\t\tself.fields['username'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['username'].widget.attrs['placeholder'] = 'User Name'",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\tfirst_name",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\tfirst_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'First Name'}), required=False)\n\tlast_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Last Name'}), required=False)\n\tclass Meta:\n\t\tmodel = User\n\t\tfields = ('username', 'first_name', 'last_name', 'email')\n\tdef __init__(self, *args, **kwargs):\n\t\tsuper(UpdateUserForm, self).__init__(*args, **kwargs)\n\t\tself.fields['username'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['username'].widget.attrs['placeholder'] = 'User Name'\n\t\tself.fields['username'].label = ''",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\tlast_name",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\tlast_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Last Name'}), required=False)\n\tclass Meta:\n\t\tmodel = User\n\t\tfields = ('username', 'first_name', 'last_name', 'email')\n\tdef __init__(self, *args, **kwargs):\n\t\tsuper(UpdateUserForm, self).__init__(*args, **kwargs)\n\t\tself.fields['username'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['username'].widget.attrs['placeholder'] = 'User Name'\n\t\tself.fields['username'].label = ''\n\t\tself.fields['username'].help_text = '<span class=\"form-text text-muted\"><small>Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.</small></span>'",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tmodel",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tmodel = User\n\t\tfields = ('username', 'first_name', 'last_name', 'email')\n\tdef __init__(self, *args, **kwargs):\n\t\tsuper(UpdateUserForm, self).__init__(*args, **kwargs)\n\t\tself.fields['username'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['username'].widget.attrs['placeholder'] = 'User Name'\n\t\tself.fields['username'].label = ''\n\t\tself.fields['username'].help_text = '<span class=\"form-text text-muted\"><small>Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.</small></span>'\nclass SignUpForm(UserCreationForm):\n\temail = forms.EmailField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Email Address'}))",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tfields",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tfields = ('username', 'first_name', 'last_name', 'email')\n\tdef __init__(self, *args, **kwargs):\n\t\tsuper(UpdateUserForm, self).__init__(*args, **kwargs)\n\t\tself.fields['username'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['username'].widget.attrs['placeholder'] = 'User Name'\n\t\tself.fields['username'].label = ''\n\t\tself.fields['username'].help_text = '<span class=\"form-text text-muted\"><small>Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.</small></span>'\nclass SignUpForm(UserCreationForm):\n\temail = forms.EmailField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Email Address'}))\n\tfirst_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'First Name'}))",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tself.fields['username'].widget.attrs['class']",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tself.fields['username'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['username'].widget.attrs['placeholder'] = 'User Name'\n\t\tself.fields['username'].label = ''\n\t\tself.fields['username'].help_text = '<span class=\"form-text text-muted\"><small>Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.</small></span>'\nclass SignUpForm(UserCreationForm):\n\temail = forms.EmailField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Email Address'}))\n\tfirst_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'First Name'}))\n\tlast_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Last Name'}))\n\tclass Meta:\n\t\tmodel = User",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tself.fields['username'].widget.attrs['placeholder']",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tself.fields['username'].widget.attrs['placeholder'] = 'User Name'\n\t\tself.fields['username'].label = ''\n\t\tself.fields['username'].help_text = '<span class=\"form-text text-muted\"><small>Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.</small></span>'\nclass SignUpForm(UserCreationForm):\n\temail = forms.EmailField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Email Address'}))\n\tfirst_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'First Name'}))\n\tlast_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Last Name'}))\n\tclass Meta:\n\t\tmodel = User\n\t\tfields = ('username', 'first_name', 'last_name', 'email', 'password1', 'password2')",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tself.fields['username'].label",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tself.fields['username'].label = ''\n\t\tself.fields['username'].help_text = '<span class=\"form-text text-muted\"><small>Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.</small></span>'\nclass SignUpForm(UserCreationForm):\n\temail = forms.EmailField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Email Address'}))\n\tfirst_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'First Name'}))\n\tlast_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Last Name'}))\n\tclass Meta:\n\t\tmodel = User\n\t\tfields = ('username', 'first_name', 'last_name', 'email', 'password1', 'password2')\n\tdef __init__(self, *args, **kwargs):",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tself.fields['username'].help_text",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tself.fields['username'].help_text = '<span class=\"form-text text-muted\"><small>Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.</small></span>'\nclass SignUpForm(UserCreationForm):\n\temail = forms.EmailField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Email Address'}))\n\tfirst_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'First Name'}))\n\tlast_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Last Name'}))\n\tclass Meta:\n\t\tmodel = User\n\t\tfields = ('username', 'first_name', 'last_name', 'email', 'password1', 'password2')\n\tdef __init__(self, *args, **kwargs):\n\t\tsuper(SignUpForm, self).__init__(*args, **kwargs)",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\temail",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\temail = forms.EmailField(label=\"\", widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Email Address'}))\n\tfirst_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'First Name'}))\n\tlast_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Last Name'}))\n\tclass Meta:\n\t\tmodel = User\n\t\tfields = ('username', 'first_name', 'last_name', 'email', 'password1', 'password2')\n\tdef __init__(self, *args, **kwargs):\n\t\tsuper(SignUpForm, self).__init__(*args, **kwargs)\n\t\tself.fields['username'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['username'].widget.attrs['placeholder'] = 'User Name'",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\tfirst_name",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\tfirst_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'First Name'}))\n\tlast_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Last Name'}))\n\tclass Meta:\n\t\tmodel = User\n\t\tfields = ('username', 'first_name', 'last_name', 'email', 'password1', 'password2')\n\tdef __init__(self, *args, **kwargs):\n\t\tsuper(SignUpForm, self).__init__(*args, **kwargs)\n\t\tself.fields['username'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['username'].widget.attrs['placeholder'] = 'User Name'\n\t\tself.fields['username'].label = ''",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\tlast_name",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\tlast_name = forms.CharField(label=\"\", max_length=100, widget=forms.TextInput(attrs={'class':'form-control', 'placeholder':'Last Name'}))\n\tclass Meta:\n\t\tmodel = User\n\t\tfields = ('username', 'first_name', 'last_name', 'email', 'password1', 'password2')\n\tdef __init__(self, *args, **kwargs):\n\t\tsuper(SignUpForm, self).__init__(*args, **kwargs)\n\t\tself.fields['username'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['username'].widget.attrs['placeholder'] = 'User Name'\n\t\tself.fields['username'].label = ''\n\t\tself.fields['username'].help_text = '<span class=\"form-text text-muted\"><small>Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.</small></span>'",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tmodel",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tmodel = User\n\t\tfields = ('username', 'first_name', 'last_name', 'email', 'password1', 'password2')\n\tdef __init__(self, *args, **kwargs):\n\t\tsuper(SignUpForm, self).__init__(*args, **kwargs)\n\t\tself.fields['username'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['username'].widget.attrs['placeholder'] = 'User Name'\n\t\tself.fields['username'].label = ''\n\t\tself.fields['username'].help_text = '<span class=\"form-text text-muted\"><small>Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.</small></span>'\n\t\tself.fields['password1'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['password1'].widget.attrs['placeholder'] = 'Password'",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tfields",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tfields = ('username', 'first_name', 'last_name', 'email', 'password1', 'password2')\n\tdef __init__(self, *args, **kwargs):\n\t\tsuper(SignUpForm, self).__init__(*args, **kwargs)\n\t\tself.fields['username'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['username'].widget.attrs['placeholder'] = 'User Name'\n\t\tself.fields['username'].label = ''\n\t\tself.fields['username'].help_text = '<span class=\"form-text text-muted\"><small>Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.</small></span>'\n\t\tself.fields['password1'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['password1'].widget.attrs['placeholder'] = 'Password'\n\t\tself.fields['password1'].label = ''",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tself.fields['username'].widget.attrs['class']",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tself.fields['username'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['username'].widget.attrs['placeholder'] = 'User Name'\n\t\tself.fields['username'].label = ''\n\t\tself.fields['username'].help_text = '<span class=\"form-text text-muted\"><small>Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.</small></span>'\n\t\tself.fields['password1'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['password1'].widget.attrs['placeholder'] = 'Password'\n\t\tself.fields['password1'].label = ''\n\t\tself.fields['password1'].help_text = '<ul class=\"form-text text-muted small\"><li>Your password can\\'t be too similar to your other personal information.</li><li>Your password must contain at least 8 characters.</li><li>Your password can\\'t be a commonly used password.</li><li>Your password can\\'t be entirely numeric.</li></ul>'\n\t\tself.fields['password2'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['password2'].widget.attrs['placeholder'] = 'Confirm Password'",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tself.fields['username'].widget.attrs['placeholder']",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tself.fields['username'].widget.attrs['placeholder'] = 'User Name'\n\t\tself.fields['username'].label = ''\n\t\tself.fields['username'].help_text = '<span class=\"form-text text-muted\"><small>Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.</small></span>'\n\t\tself.fields['password1'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['password1'].widget.attrs['placeholder'] = 'Password'\n\t\tself.fields['password1'].label = ''\n\t\tself.fields['password1'].help_text = '<ul class=\"form-text text-muted small\"><li>Your password can\\'t be too similar to your other personal information.</li><li>Your password must contain at least 8 characters.</li><li>Your password can\\'t be a commonly used password.</li><li>Your password can\\'t be entirely numeric.</li></ul>'\n\t\tself.fields['password2'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['password2'].widget.attrs['placeholder'] = 'Confirm Password'\n\t\tself.fields['password2'].label = ''",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tself.fields['username'].label",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tself.fields['username'].label = ''\n\t\tself.fields['username'].help_text = '<span class=\"form-text text-muted\"><small>Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.</small></span>'\n\t\tself.fields['password1'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['password1'].widget.attrs['placeholder'] = 'Password'\n\t\tself.fields['password1'].label = ''\n\t\tself.fields['password1'].help_text = '<ul class=\"form-text text-muted small\"><li>Your password can\\'t be too similar to your other personal information.</li><li>Your password must contain at least 8 characters.</li><li>Your password can\\'t be a commonly used password.</li><li>Your password can\\'t be entirely numeric.</li></ul>'\n\t\tself.fields['password2'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['password2'].widget.attrs['placeholder'] = 'Confirm Password'\n\t\tself.fields['password2'].label = ''\n\t\tself.fields['password2'].help_text = '<span class=\"form-text text-muted\"><small>Enter the same password as before, for verification.</small></span>'",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tself.fields['username'].help_text",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tself.fields['username'].help_text = '<span class=\"form-text text-muted\"><small>Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.</small></span>'\n\t\tself.fields['password1'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['password1'].widget.attrs['placeholder'] = 'Password'\n\t\tself.fields['password1'].label = ''\n\t\tself.fields['password1'].help_text = '<ul class=\"form-text text-muted small\"><li>Your password can\\'t be too similar to your other personal information.</li><li>Your password must contain at least 8 characters.</li><li>Your password can\\'t be a commonly used password.</li><li>Your password can\\'t be entirely numeric.</li></ul>'\n\t\tself.fields['password2'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['password2'].widget.attrs['placeholder'] = 'Confirm Password'\n\t\tself.fields['password2'].label = ''\n\t\tself.fields['password2'].help_text = '<span class=\"form-text text-muted\"><small>Enter the same password as before, for verification.</small></span>'",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tself.fields['password1'].widget.attrs['class']",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tself.fields['password1'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['password1'].widget.attrs['placeholder'] = 'Password'\n\t\tself.fields['password1'].label = ''\n\t\tself.fields['password1'].help_text = '<ul class=\"form-text text-muted small\"><li>Your password can\\'t be too similar to your other personal information.</li><li>Your password must contain at least 8 characters.</li><li>Your password can\\'t be a commonly used password.</li><li>Your password can\\'t be entirely numeric.</li></ul>'\n\t\tself.fields['password2'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['password2'].widget.attrs['placeholder'] = 'Confirm Password'\n\t\tself.fields['password2'].label = ''\n\t\tself.fields['password2'].help_text = '<span class=\"form-text text-muted\"><small>Enter the same password as before, for verification.</small></span>'",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tself.fields['password1'].widget.attrs['placeholder']",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tself.fields['password1'].widget.attrs['placeholder'] = 'Password'\n\t\tself.fields['password1'].label = ''\n\t\tself.fields['password1'].help_text = '<ul class=\"form-text text-muted small\"><li>Your password can\\'t be too similar to your other personal information.</li><li>Your password must contain at least 8 characters.</li><li>Your password can\\'t be a commonly used password.</li><li>Your password can\\'t be entirely numeric.</li></ul>'\n\t\tself.fields['password2'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['password2'].widget.attrs['placeholder'] = 'Confirm Password'\n\t\tself.fields['password2'].label = ''\n\t\tself.fields['password2'].help_text = '<span class=\"form-text text-muted\"><small>Enter the same password as before, for verification.</small></span>'",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tself.fields['password1'].label",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tself.fields['password1'].label = ''\n\t\tself.fields['password1'].help_text = '<ul class=\"form-text text-muted small\"><li>Your password can\\'t be too similar to your other personal information.</li><li>Your password must contain at least 8 characters.</li><li>Your password can\\'t be a commonly used password.</li><li>Your password can\\'t be entirely numeric.</li></ul>'\n\t\tself.fields['password2'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['password2'].widget.attrs['placeholder'] = 'Confirm Password'\n\t\tself.fields['password2'].label = ''\n\t\tself.fields['password2'].help_text = '<span class=\"form-text text-muted\"><small>Enter the same password as before, for verification.</small></span>'",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tself.fields['password1'].help_text",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tself.fields['password1'].help_text = '<ul class=\"form-text text-muted small\"><li>Your password can\\'t be too similar to your other personal information.</li><li>Your password must contain at least 8 characters.</li><li>Your password can\\'t be a commonly used password.</li><li>Your password can\\'t be entirely numeric.</li></ul>'\n\t\tself.fields['password2'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['password2'].widget.attrs['placeholder'] = 'Confirm Password'\n\t\tself.fields['password2'].label = ''\n\t\tself.fields['password2'].help_text = '<span class=\"form-text text-muted\"><small>Enter the same password as before, for verification.</small></span>'",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tself.fields['password2'].widget.attrs['class']",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tself.fields['password2'].widget.attrs['class'] = 'form-control'\n\t\tself.fields['password2'].widget.attrs['placeholder'] = 'Confirm Password'\n\t\tself.fields['password2'].label = ''\n\t\tself.fields['password2'].help_text = '<span class=\"form-text text-muted\"><small>Enter the same password as before, for verification.</small></span>'",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tself.fields['password2'].widget.attrs['placeholder']",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tself.fields['password2'].widget.attrs['placeholder'] = 'Confirm Password'\n\t\tself.fields['password2'].label = ''\n\t\tself.fields['password2'].help_text = '<span class=\"form-text text-muted\"><small>Enter the same password as before, for verification.</small></span>'",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tself.fields['password2'].label",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tself.fields['password2'].label = ''\n\t\tself.fields['password2'].help_text = '<span class=\"form-text text-muted\"><small>Enter the same password as before, for verification.</small></span>'",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "\t\tself.fields['password2'].help_text",
        "kind": 5,
        "importPath": "store.forms",
        "description": "store.forms",
        "peekOfCode": "\t\tself.fields['password2'].help_text = '<span class=\"form-text text-muted\"><small>Enter the same password as before, for verification.</small></span>'",
        "detail": "store.forms",
        "documentation": {}
    },
    {
        "label": "Profile",
        "kind": 6,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "class Profile(models.Model):\n\tuser = models.OneToOneField(User, on_delete=models.CASCADE)\n\tdate_modified = models.DateTimeField(User, auto_now=True)\n\tphone = models.CharField(max_length=20, blank=True)\n\taddress1 = models.CharField(max_length=200, blank=True)\n\taddress2 = models.CharField(max_length=200, blank=True)\n\tcity = models.CharField(max_length=200, blank=True)\t\n\told_cart = models.CharField(max_length=200, blank=True, null=True)\n\tdef __str__(self):\n\t\treturn self.user.username",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "class Category(models.Model):\n\tname = models.CharField(max_length=50)\n\tdef __str__(self):\n\t\treturn self.name\n\t#@daverobb2011\n\tclass Meta:\n\t\tverbose_name_plural = 'categories'\n# Customers\nclass Customer(models.Model):\n\tfirst_name = models.CharField(max_length=50)",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "kind": 6,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "class Customer(models.Model):\n\tfirst_name = models.CharField(max_length=50)\n\tlast_name = models.CharField(max_length=50)\n\tphone = models.CharField(max_length=10)\n\temail = models.EmailField(max_length=100)\n\tpassword = models.CharField(max_length=100)\n\tdef __str__(self):\n\t\treturn f'{self.first_name} {self.last_name}'\n# All of our Products\nclass Product(models.Model):",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "kind": 6,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "class Product(models.Model):\n\ttiki_product_id = models.IntegerField(unique=True, default=0)\n\tname = models.CharField(max_length=100)\n\tprice = models.IntegerField(default=0)\n\tcategory = models.ForeignKey(Category, on_delete=models.CASCADE, default=1)\n\tdescription = models.CharField(max_length=250, default='', blank=True, null=True)\n\timage = models.CharField(max_length=100)\n\tbrand_id = models.IntegerField(default=0)\n\tbrand_name = models.CharField(max_length=100, default='')\n\t# Add Sale Stuff",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "kind": 6,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "class Order(models.Model):\n\tproduct = models.ForeignKey(Product, on_delete=models.CASCADE)\n\tcustomer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n\tquantity = models.IntegerField(default=1)\n\taddress = models.CharField(max_length=100, default='', blank=True)\n\tphone = models.CharField(max_length=20, default='', blank=True)\n\tdate = models.DateField(default=datetime.datetime.today)\n\tstatus = models.BooleanField(default=False)\n\tdef __str__(self):\n\t\treturn self.product",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Rating",
        "kind": 6,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "class Rating(models.Model):\n\tproduct = models.ForeignKey(Product, on_delete=models.CASCADE, to_field='tiki_product_id', related_name='ratings')\n\ttitle = models.CharField(max_length=100, default='')\n\tcustomer_id = models.IntegerField(default=0)\n\trating = models.IntegerField(default=0)\n\tcustomer_name = models.CharField(max_length=100, default='')\n\tdef __str__(self):\n\t\treturn str(self.rating)\n#Thêm rating và nối lại cho id sản phẩm match với id sp trong rating",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "create_profile",
        "kind": 2,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "def create_profile(sender, instance, created, **kwargs):\n\tif created:\n\t\tuser_profile = Profile(user=instance)\n\t\tuser_profile.save()\n# Automate the profile thing\npost_save.connect(create_profile, sender=User)\n# Categories of Products\nclass Category(models.Model):\n\tname = models.CharField(max_length=50)\n\tdef __str__(self):",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\tuser",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\tuser = models.OneToOneField(User, on_delete=models.CASCADE)\n\tdate_modified = models.DateTimeField(User, auto_now=True)\n\tphone = models.CharField(max_length=20, blank=True)\n\taddress1 = models.CharField(max_length=200, blank=True)\n\taddress2 = models.CharField(max_length=200, blank=True)\n\tcity = models.CharField(max_length=200, blank=True)\t\n\told_cart = models.CharField(max_length=200, blank=True, null=True)\n\tdef __str__(self):\n\t\treturn self.user.username\n# Create a user Profile by default when user signs up",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\tdate_modified",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\tdate_modified = models.DateTimeField(User, auto_now=True)\n\tphone = models.CharField(max_length=20, blank=True)\n\taddress1 = models.CharField(max_length=200, blank=True)\n\taddress2 = models.CharField(max_length=200, blank=True)\n\tcity = models.CharField(max_length=200, blank=True)\t\n\told_cart = models.CharField(max_length=200, blank=True, null=True)\n\tdef __str__(self):\n\t\treturn self.user.username\n# Create a user Profile by default when user signs up\ndef create_profile(sender, instance, created, **kwargs):",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\tphone",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\tphone = models.CharField(max_length=20, blank=True)\n\taddress1 = models.CharField(max_length=200, blank=True)\n\taddress2 = models.CharField(max_length=200, blank=True)\n\tcity = models.CharField(max_length=200, blank=True)\t\n\told_cart = models.CharField(max_length=200, blank=True, null=True)\n\tdef __str__(self):\n\t\treturn self.user.username\n# Create a user Profile by default when user signs up\ndef create_profile(sender, instance, created, **kwargs):\n\tif created:",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\taddress1",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\taddress1 = models.CharField(max_length=200, blank=True)\n\taddress2 = models.CharField(max_length=200, blank=True)\n\tcity = models.CharField(max_length=200, blank=True)\t\n\told_cart = models.CharField(max_length=200, blank=True, null=True)\n\tdef __str__(self):\n\t\treturn self.user.username\n# Create a user Profile by default when user signs up\ndef create_profile(sender, instance, created, **kwargs):\n\tif created:\n\t\tuser_profile = Profile(user=instance)",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\taddress2",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\taddress2 = models.CharField(max_length=200, blank=True)\n\tcity = models.CharField(max_length=200, blank=True)\t\n\told_cart = models.CharField(max_length=200, blank=True, null=True)\n\tdef __str__(self):\n\t\treturn self.user.username\n# Create a user Profile by default when user signs up\ndef create_profile(sender, instance, created, **kwargs):\n\tif created:\n\t\tuser_profile = Profile(user=instance)\n\t\tuser_profile.save()",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\tcity",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\tcity = models.CharField(max_length=200, blank=True)\t\n\told_cart = models.CharField(max_length=200, blank=True, null=True)\n\tdef __str__(self):\n\t\treturn self.user.username\n# Create a user Profile by default when user signs up\ndef create_profile(sender, instance, created, **kwargs):\n\tif created:\n\t\tuser_profile = Profile(user=instance)\n\t\tuser_profile.save()\n# Automate the profile thing",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\told_cart",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\told_cart = models.CharField(max_length=200, blank=True, null=True)\n\tdef __str__(self):\n\t\treturn self.user.username\n# Create a user Profile by default when user signs up\ndef create_profile(sender, instance, created, **kwargs):\n\tif created:\n\t\tuser_profile = Profile(user=instance)\n\t\tuser_profile.save()\n# Automate the profile thing\npost_save.connect(create_profile, sender=User)",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\t\tuser_profile",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\t\tuser_profile = Profile(user=instance)\n\t\tuser_profile.save()\n# Automate the profile thing\npost_save.connect(create_profile, sender=User)\n# Categories of Products\nclass Category(models.Model):\n\tname = models.CharField(max_length=50)\n\tdef __str__(self):\n\t\treturn self.name\n\t#@daverobb2011",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\tname",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\tname = models.CharField(max_length=50)\n\tdef __str__(self):\n\t\treturn self.name\n\t#@daverobb2011\n\tclass Meta:\n\t\tverbose_name_plural = 'categories'\n# Customers\nclass Customer(models.Model):\n\tfirst_name = models.CharField(max_length=50)\n\tlast_name = models.CharField(max_length=50)",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\t\tverbose_name_plural",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\t\tverbose_name_plural = 'categories'\n# Customers\nclass Customer(models.Model):\n\tfirst_name = models.CharField(max_length=50)\n\tlast_name = models.CharField(max_length=50)\n\tphone = models.CharField(max_length=10)\n\temail = models.EmailField(max_length=100)\n\tpassword = models.CharField(max_length=100)\n\tdef __str__(self):\n\t\treturn f'{self.first_name} {self.last_name}'",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\tfirst_name",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\tfirst_name = models.CharField(max_length=50)\n\tlast_name = models.CharField(max_length=50)\n\tphone = models.CharField(max_length=10)\n\temail = models.EmailField(max_length=100)\n\tpassword = models.CharField(max_length=100)\n\tdef __str__(self):\n\t\treturn f'{self.first_name} {self.last_name}'\n# All of our Products\nclass Product(models.Model):\n\ttiki_product_id = models.IntegerField(unique=True, default=0)",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\tlast_name",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\tlast_name = models.CharField(max_length=50)\n\tphone = models.CharField(max_length=10)\n\temail = models.EmailField(max_length=100)\n\tpassword = models.CharField(max_length=100)\n\tdef __str__(self):\n\t\treturn f'{self.first_name} {self.last_name}'\n# All of our Products\nclass Product(models.Model):\n\ttiki_product_id = models.IntegerField(unique=True, default=0)\n\tname = models.CharField(max_length=100)",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\tphone",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\tphone = models.CharField(max_length=10)\n\temail = models.EmailField(max_length=100)\n\tpassword = models.CharField(max_length=100)\n\tdef __str__(self):\n\t\treturn f'{self.first_name} {self.last_name}'\n# All of our Products\nclass Product(models.Model):\n\ttiki_product_id = models.IntegerField(unique=True, default=0)\n\tname = models.CharField(max_length=100)\n\tprice = models.IntegerField(default=0)",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\temail",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\temail = models.EmailField(max_length=100)\n\tpassword = models.CharField(max_length=100)\n\tdef __str__(self):\n\t\treturn f'{self.first_name} {self.last_name}'\n# All of our Products\nclass Product(models.Model):\n\ttiki_product_id = models.IntegerField(unique=True, default=0)\n\tname = models.CharField(max_length=100)\n\tprice = models.IntegerField(default=0)\n\tcategory = models.ForeignKey(Category, on_delete=models.CASCADE, default=1)",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\tpassword",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\tpassword = models.CharField(max_length=100)\n\tdef __str__(self):\n\t\treturn f'{self.first_name} {self.last_name}'\n# All of our Products\nclass Product(models.Model):\n\ttiki_product_id = models.IntegerField(unique=True, default=0)\n\tname = models.CharField(max_length=100)\n\tprice = models.IntegerField(default=0)\n\tcategory = models.ForeignKey(Category, on_delete=models.CASCADE, default=1)\n\tdescription = models.CharField(max_length=250, default='', blank=True, null=True)",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\ttiki_product_id",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\ttiki_product_id = models.IntegerField(unique=True, default=0)\n\tname = models.CharField(max_length=100)\n\tprice = models.IntegerField(default=0)\n\tcategory = models.ForeignKey(Category, on_delete=models.CASCADE, default=1)\n\tdescription = models.CharField(max_length=250, default='', blank=True, null=True)\n\timage = models.CharField(max_length=100)\n\tbrand_id = models.IntegerField(default=0)\n\tbrand_name = models.CharField(max_length=100, default='')\n\t# Add Sale Stuff\n\tdef __str__(self):",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\tname",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\tname = models.CharField(max_length=100)\n\tprice = models.IntegerField(default=0)\n\tcategory = models.ForeignKey(Category, on_delete=models.CASCADE, default=1)\n\tdescription = models.CharField(max_length=250, default='', blank=True, null=True)\n\timage = models.CharField(max_length=100)\n\tbrand_id = models.IntegerField(default=0)\n\tbrand_name = models.CharField(max_length=100, default='')\n\t# Add Sale Stuff\n\tdef __str__(self):\n\t\treturn self.name",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\tprice",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\tprice = models.IntegerField(default=0)\n\tcategory = models.ForeignKey(Category, on_delete=models.CASCADE, default=1)\n\tdescription = models.CharField(max_length=250, default='', blank=True, null=True)\n\timage = models.CharField(max_length=100)\n\tbrand_id = models.IntegerField(default=0)\n\tbrand_name = models.CharField(max_length=100, default='')\n\t# Add Sale Stuff\n\tdef __str__(self):\n\t\treturn self.name\n# Customer Orders",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\tcategory",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\tcategory = models.ForeignKey(Category, on_delete=models.CASCADE, default=1)\n\tdescription = models.CharField(max_length=250, default='', blank=True, null=True)\n\timage = models.CharField(max_length=100)\n\tbrand_id = models.IntegerField(default=0)\n\tbrand_name = models.CharField(max_length=100, default='')\n\t# Add Sale Stuff\n\tdef __str__(self):\n\t\treturn self.name\n# Customer Orders\nclass Order(models.Model):",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\tdescription",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\tdescription = models.CharField(max_length=250, default='', blank=True, null=True)\n\timage = models.CharField(max_length=100)\n\tbrand_id = models.IntegerField(default=0)\n\tbrand_name = models.CharField(max_length=100, default='')\n\t# Add Sale Stuff\n\tdef __str__(self):\n\t\treturn self.name\n# Customer Orders\nclass Order(models.Model):\n\tproduct = models.ForeignKey(Product, on_delete=models.CASCADE)",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\timage",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\timage = models.CharField(max_length=100)\n\tbrand_id = models.IntegerField(default=0)\n\tbrand_name = models.CharField(max_length=100, default='')\n\t# Add Sale Stuff\n\tdef __str__(self):\n\t\treturn self.name\n# Customer Orders\nclass Order(models.Model):\n\tproduct = models.ForeignKey(Product, on_delete=models.CASCADE)\n\tcustomer = models.ForeignKey(Customer, on_delete=models.CASCADE)",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\tbrand_id",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\tbrand_id = models.IntegerField(default=0)\n\tbrand_name = models.CharField(max_length=100, default='')\n\t# Add Sale Stuff\n\tdef __str__(self):\n\t\treturn self.name\n# Customer Orders\nclass Order(models.Model):\n\tproduct = models.ForeignKey(Product, on_delete=models.CASCADE)\n\tcustomer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n\tquantity = models.IntegerField(default=1)",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\tbrand_name",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\tbrand_name = models.CharField(max_length=100, default='')\n\t# Add Sale Stuff\n\tdef __str__(self):\n\t\treturn self.name\n# Customer Orders\nclass Order(models.Model):\n\tproduct = models.ForeignKey(Product, on_delete=models.CASCADE)\n\tcustomer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n\tquantity = models.IntegerField(default=1)\n\taddress = models.CharField(max_length=100, default='', blank=True)",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\tproduct",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\tproduct = models.ForeignKey(Product, on_delete=models.CASCADE)\n\tcustomer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n\tquantity = models.IntegerField(default=1)\n\taddress = models.CharField(max_length=100, default='', blank=True)\n\tphone = models.CharField(max_length=20, default='', blank=True)\n\tdate = models.DateField(default=datetime.datetime.today)\n\tstatus = models.BooleanField(default=False)\n\tdef __str__(self):\n\t\treturn self.product\nclass Rating(models.Model):",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\tcustomer",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\tcustomer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n\tquantity = models.IntegerField(default=1)\n\taddress = models.CharField(max_length=100, default='', blank=True)\n\tphone = models.CharField(max_length=20, default='', blank=True)\n\tdate = models.DateField(default=datetime.datetime.today)\n\tstatus = models.BooleanField(default=False)\n\tdef __str__(self):\n\t\treturn self.product\nclass Rating(models.Model):\n\tproduct = models.ForeignKey(Product, on_delete=models.CASCADE, to_field='tiki_product_id', related_name='ratings')",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\tquantity",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\tquantity = models.IntegerField(default=1)\n\taddress = models.CharField(max_length=100, default='', blank=True)\n\tphone = models.CharField(max_length=20, default='', blank=True)\n\tdate = models.DateField(default=datetime.datetime.today)\n\tstatus = models.BooleanField(default=False)\n\tdef __str__(self):\n\t\treturn self.product\nclass Rating(models.Model):\n\tproduct = models.ForeignKey(Product, on_delete=models.CASCADE, to_field='tiki_product_id', related_name='ratings')\n\ttitle = models.CharField(max_length=100, default='')",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\taddress",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\taddress = models.CharField(max_length=100, default='', blank=True)\n\tphone = models.CharField(max_length=20, default='', blank=True)\n\tdate = models.DateField(default=datetime.datetime.today)\n\tstatus = models.BooleanField(default=False)\n\tdef __str__(self):\n\t\treturn self.product\nclass Rating(models.Model):\n\tproduct = models.ForeignKey(Product, on_delete=models.CASCADE, to_field='tiki_product_id', related_name='ratings')\n\ttitle = models.CharField(max_length=100, default='')\n\tcustomer_id = models.IntegerField(default=0)",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\tphone",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\tphone = models.CharField(max_length=20, default='', blank=True)\n\tdate = models.DateField(default=datetime.datetime.today)\n\tstatus = models.BooleanField(default=False)\n\tdef __str__(self):\n\t\treturn self.product\nclass Rating(models.Model):\n\tproduct = models.ForeignKey(Product, on_delete=models.CASCADE, to_field='tiki_product_id', related_name='ratings')\n\ttitle = models.CharField(max_length=100, default='')\n\tcustomer_id = models.IntegerField(default=0)\n\trating = models.IntegerField(default=0)",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\tdate",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\tdate = models.DateField(default=datetime.datetime.today)\n\tstatus = models.BooleanField(default=False)\n\tdef __str__(self):\n\t\treturn self.product\nclass Rating(models.Model):\n\tproduct = models.ForeignKey(Product, on_delete=models.CASCADE, to_field='tiki_product_id', related_name='ratings')\n\ttitle = models.CharField(max_length=100, default='')\n\tcustomer_id = models.IntegerField(default=0)\n\trating = models.IntegerField(default=0)\n\tcustomer_name = models.CharField(max_length=100, default='')",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\tstatus",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\tstatus = models.BooleanField(default=False)\n\tdef __str__(self):\n\t\treturn self.product\nclass Rating(models.Model):\n\tproduct = models.ForeignKey(Product, on_delete=models.CASCADE, to_field='tiki_product_id', related_name='ratings')\n\ttitle = models.CharField(max_length=100, default='')\n\tcustomer_id = models.IntegerField(default=0)\n\trating = models.IntegerField(default=0)\n\tcustomer_name = models.CharField(max_length=100, default='')\n\tdef __str__(self):",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\tproduct",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\tproduct = models.ForeignKey(Product, on_delete=models.CASCADE, to_field='tiki_product_id', related_name='ratings')\n\ttitle = models.CharField(max_length=100, default='')\n\tcustomer_id = models.IntegerField(default=0)\n\trating = models.IntegerField(default=0)\n\tcustomer_name = models.CharField(max_length=100, default='')\n\tdef __str__(self):\n\t\treturn str(self.rating)\n#Thêm rating và nối lại cho id sản phẩm match với id sp trong rating",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\ttitle",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\ttitle = models.CharField(max_length=100, default='')\n\tcustomer_id = models.IntegerField(default=0)\n\trating = models.IntegerField(default=0)\n\tcustomer_name = models.CharField(max_length=100, default='')\n\tdef __str__(self):\n\t\treturn str(self.rating)\n#Thêm rating và nối lại cho id sản phẩm match với id sp trong rating",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\tcustomer_id",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\tcustomer_id = models.IntegerField(default=0)\n\trating = models.IntegerField(default=0)\n\tcustomer_name = models.CharField(max_length=100, default='')\n\tdef __str__(self):\n\t\treturn str(self.rating)\n#Thêm rating và nối lại cho id sản phẩm match với id sp trong rating",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\trating",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\trating = models.IntegerField(default=0)\n\tcustomer_name = models.CharField(max_length=100, default='')\n\tdef __str__(self):\n\t\treturn str(self.rating)\n#Thêm rating và nối lại cho id sản phẩm match với id sp trong rating",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "\tcustomer_name",
        "kind": 5,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "\tcustomer_name = models.CharField(max_length=100, default='')\n\tdef __str__(self):\n\t\treturn str(self.rating)\n#Thêm rating và nối lại cho id sản phẩm match với id sp trong rating",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "store.urls",
        "description": "store.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.home, name='home'),\n    path('about/', views.about, name='about'),\n    path('login/', views.login_user, name='login'),\n    path('logout/', views.logout_user, name='logout'),\n    path('register/', views.register_user, name='register'),\n    path('update_password/', views.update_password, name='update_password'),\n    path('update_user/', views.update_user, name='update_user'),\n    path('update_info/', views.update_info, name='update_info'),\n    path('product/<int:pk>', views.product, name='product'),",
        "detail": "store.urls",
        "documentation": {}
    },
    {
        "label": "search",
        "kind": 2,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "def search(request):\n\t# Determine if they filled out the form\n\tif request.method == \"POST\":\n\t\tsearched = request.POST['searched']\n\t\t# Query The Products DB Model\n\t\tsearched = Product.objects.filter(Q(name__icontains=searched))\n\t\t# Test for null\n\t\tif not searched:\n\t\t\tmessages.success(request, \"That Product Does Not Exist...Please try Again.\")\n\t\t\treturn render(request, \"search.html\", {})",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "update_info",
        "kind": 2,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "def update_info(request):\n\tif request.user.is_authenticated:\n\t\t# Get Current User\n\t\tcurrent_user = Profile.objects.get(user__id=request.user.id)\n\t\t# Get Current User's Shipping Info\n\t\tshipping_user = ShippingAddress.objects.get(user__id=request.user.id)\n\t\t# Get original User Form\n\t\tform = UserInfoForm(request.POST or None, instance=current_user)\n\t\t# Get User's Shipping Form\n\t\tshipping_form = ShippingForm(request.POST or None, instance=shipping_user)\t\t",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "update_password",
        "kind": 2,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "def update_password(request):\n\tif request.user.is_authenticated:\n\t\tcurrent_user = request.user\n\t\t# Did they fill out the form\n\t\tif request.method  == 'POST':\n\t\t\tform = ChangePasswordForm(current_user, request.POST)\n\t\t\t# Is the form valid\n\t\t\tif form.is_valid():\n\t\t\t\tform.save()\n\t\t\t\tmessages.success(request, \"Your Password Has Been Updated...\")",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "update_user",
        "kind": 2,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "def update_user(request):\n\tif request.user.is_authenticated:\n\t\tcurrent_user = User.objects.get(id=request.user.id)\n\t\tuser_form = UpdateUserForm(request.POST or None, instance=current_user)\n\t\tif user_form.is_valid():\n\t\t\tuser_form.save()\n\t\t\tlogin(request, current_user)\n\t\t\tmessages.success(request, \"User Has Been Updated!!\")\n\t\t\treturn redirect('home')\n\t\treturn render(request, \"update_user.html\", {'user_form':user_form})",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "category_summary",
        "kind": 2,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "def category_summary(request):\n\tcategories = Category.objects.all()\n\treturn render(request, 'category_summary.html', {\"categories\":categories})\t\ndef category(request, foo):\n\ttry:\n\t\t# Look Up The Category\n\t\tcategory = Category.objects.get(name=foo)\n\t\tproduct_list = Product.objects.filter(category=category)\n\t\t# Pagination\n\t\tpaginator = Paginator(product_list, 52)  # Show 10 products per page",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "category",
        "kind": 2,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "def category(request, foo):\n\ttry:\n\t\t# Look Up The Category\n\t\tcategory = Category.objects.get(name=foo)\n\t\tproduct_list = Product.objects.filter(category=category)\n\t\t# Pagination\n\t\tpaginator = Paginator(product_list, 52)  # Show 10 products per page\n\t\tpage = request.GET.get('page')\n\t\ttry:\n\t\t\tproducts = paginator.page(page)",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "product",
        "kind": 2,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "def product(request,pk):\n\tproduct = Product.objects.get(id=pk)\n\treccomend_products = Product.objects.filter(category=product.category)[:3]\n\treturn render(request, 'product.html', {'product':product, 'reccomend_products':reccomend_products})\n# def home(request):\n# \tproducts = Product.objects.all()\n# \treturn render(request, 'home.html', {'products':products})\ndef about(request):\n\treturn render(request, 'about.html', {})\t\ndef login_user(request):",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "about",
        "kind": 2,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "def about(request):\n\treturn render(request, 'about.html', {})\t\ndef login_user(request):\n\tif request.method == \"POST\":\n\t\tusername = request.POST['username']\n\t\tpassword = request.POST['password']\n\t\tuser = authenticate(request, username=username, password=password)\n\t\tif user is not None:\n\t\t\tlogin(request, user)\n\t\t\t# Do some shopping cart stuff",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "login_user",
        "kind": 2,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "def login_user(request):\n\tif request.method == \"POST\":\n\t\tusername = request.POST['username']\n\t\tpassword = request.POST['password']\n\t\tuser = authenticate(request, username=username, password=password)\n\t\tif user is not None:\n\t\t\tlogin(request, user)\n\t\t\t# Do some shopping cart stuff\n\t\t\tcurrent_user = Profile.objects.get(user__id=request.user.id)\n\t\t\t# Get their saved cart from database",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "logout_user",
        "kind": 2,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "def logout_user(request):\n\tlogout(request)\n\tmessages.success(request, (\"You have been logged out...Thanks for stopping by...\"))\n\treturn redirect('home')\ndef register_user(request):\n\tform = SignUpForm()\n\tif request.method == \"POST\":\n\t\tform = SignUpForm(request.POST)\n\t\tif form.is_valid():\n\t\t\tform.save()",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "register_user",
        "kind": 2,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "def register_user(request):\n\tform = SignUpForm()\n\tif request.method == \"POST\":\n\t\tform = SignUpForm(request.POST)\n\t\tif form.is_valid():\n\t\t\tform.save()\n\t\t\tusername = form.cleaned_data['username']\n\t\t\tpassword = form.cleaned_data['password1']\n\t\t\t# log in user\n\t\t\tuser = authenticate(username=username, password=password)",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "home",
        "kind": 2,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "def home(request):\n    product_list = Product.objects.all()\n    # Pagination\n    paginator = Paginator(product_list, 52)  # Show 10 products per page\n    page = request.GET.get('page')\n    try:\n        products = paginator.page(page)\n    except PageNotAnInteger:\n        # If page is not an integer, deliver first page.\n        products = paginator.page(1)",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\tsearched",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\tsearched = request.POST['searched']\n\t\t# Query The Products DB Model\n\t\tsearched = Product.objects.filter(Q(name__icontains=searched))\n\t\t# Test for null\n\t\tif not searched:\n\t\t\tmessages.success(request, \"That Product Does Not Exist...Please try Again.\")\n\t\t\treturn render(request, \"search.html\", {})\n\t\telse:\n\t\t\treturn render(request, \"search.html\", {'searched':searched})\n\telse:",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\tsearched",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\tsearched = Product.objects.filter(Q(name__icontains=searched))\n\t\t# Test for null\n\t\tif not searched:\n\t\t\tmessages.success(request, \"That Product Does Not Exist...Please try Again.\")\n\t\t\treturn render(request, \"search.html\", {})\n\t\telse:\n\t\t\treturn render(request, \"search.html\", {'searched':searched})\n\telse:\n\t\treturn render(request, \"search.html\", {})\t\ndef update_info(request):",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\tcurrent_user",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\tcurrent_user = Profile.objects.get(user__id=request.user.id)\n\t\t# Get Current User's Shipping Info\n\t\tshipping_user = ShippingAddress.objects.get(user__id=request.user.id)\n\t\t# Get original User Form\n\t\tform = UserInfoForm(request.POST or None, instance=current_user)\n\t\t# Get User's Shipping Form\n\t\tshipping_form = ShippingForm(request.POST or None, instance=shipping_user)\t\t\n\t\tif form.is_valid() or shipping_form.is_valid():\n\t\t\t# Save original form\n\t\t\tform.save()",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\tshipping_user",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\tshipping_user = ShippingAddress.objects.get(user__id=request.user.id)\n\t\t# Get original User Form\n\t\tform = UserInfoForm(request.POST or None, instance=current_user)\n\t\t# Get User's Shipping Form\n\t\tshipping_form = ShippingForm(request.POST or None, instance=shipping_user)\t\t\n\t\tif form.is_valid() or shipping_form.is_valid():\n\t\t\t# Save original form\n\t\t\tform.save()\n\t\t\t# Save shipping form\n\t\t\tshipping_form.save()",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\tform",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\tform = UserInfoForm(request.POST or None, instance=current_user)\n\t\t# Get User's Shipping Form\n\t\tshipping_form = ShippingForm(request.POST or None, instance=shipping_user)\t\t\n\t\tif form.is_valid() or shipping_form.is_valid():\n\t\t\t# Save original form\n\t\t\tform.save()\n\t\t\t# Save shipping form\n\t\t\tshipping_form.save()\n\t\t\tmessages.success(request, \"Your Info Has Been Updated!!\")\n\t\t\treturn redirect('home')",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\tshipping_form",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\tshipping_form = ShippingForm(request.POST or None, instance=shipping_user)\t\t\n\t\tif form.is_valid() or shipping_form.is_valid():\n\t\t\t# Save original form\n\t\t\tform.save()\n\t\t\t# Save shipping form\n\t\t\tshipping_form.save()\n\t\t\tmessages.success(request, \"Your Info Has Been Updated!!\")\n\t\t\treturn redirect('home')\n\t\treturn render(request, \"update_info.html\", {'form':form, 'shipping_form':shipping_form})\n\telse:",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\tcurrent_user",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\tcurrent_user = request.user\n\t\t# Did they fill out the form\n\t\tif request.method  == 'POST':\n\t\t\tform = ChangePasswordForm(current_user, request.POST)\n\t\t\t# Is the form valid\n\t\t\tif form.is_valid():\n\t\t\t\tform.save()\n\t\t\t\tmessages.success(request, \"Your Password Has Been Updated...\")\n\t\t\t\tlogin(request, current_user)\n\t\t\t\treturn redirect('update_user')",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\t\tform",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\t\tform = ChangePasswordForm(current_user, request.POST)\n\t\t\t# Is the form valid\n\t\t\tif form.is_valid():\n\t\t\t\tform.save()\n\t\t\t\tmessages.success(request, \"Your Password Has Been Updated...\")\n\t\t\t\tlogin(request, current_user)\n\t\t\t\treturn redirect('update_user')\n\t\t\telse:\n\t\t\t\tfor error in list(form.errors.values()):\n\t\t\t\t\tmessages.error(request, error)",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\t\tform",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\t\tform = ChangePasswordForm(current_user)\n\t\t\treturn render(request, \"update_password.html\", {'form':form})\n\telse:\n\t\tmessages.success(request, \"You Must Be Logged In To View That Page...\")\n\t\treturn redirect('home')\ndef update_user(request):\n\tif request.user.is_authenticated:\n\t\tcurrent_user = User.objects.get(id=request.user.id)\n\t\tuser_form = UpdateUserForm(request.POST or None, instance=current_user)\n\t\tif user_form.is_valid():",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\tcurrent_user",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\tcurrent_user = User.objects.get(id=request.user.id)\n\t\tuser_form = UpdateUserForm(request.POST or None, instance=current_user)\n\t\tif user_form.is_valid():\n\t\t\tuser_form.save()\n\t\t\tlogin(request, current_user)\n\t\t\tmessages.success(request, \"User Has Been Updated!!\")\n\t\t\treturn redirect('home')\n\t\treturn render(request, \"update_user.html\", {'user_form':user_form})\n\telse:\n\t\tmessages.success(request, \"You Must Be Logged In To Access That Page!!\")",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\tuser_form",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\tuser_form = UpdateUserForm(request.POST or None, instance=current_user)\n\t\tif user_form.is_valid():\n\t\t\tuser_form.save()\n\t\t\tlogin(request, current_user)\n\t\t\tmessages.success(request, \"User Has Been Updated!!\")\n\t\t\treturn redirect('home')\n\t\treturn render(request, \"update_user.html\", {'user_form':user_form})\n\telse:\n\t\tmessages.success(request, \"You Must Be Logged In To Access That Page!!\")\n\t\treturn redirect('home')",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\tcategories",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\tcategories = Category.objects.all()\n\treturn render(request, 'category_summary.html', {\"categories\":categories})\t\ndef category(request, foo):\n\ttry:\n\t\t# Look Up The Category\n\t\tcategory = Category.objects.get(name=foo)\n\t\tproduct_list = Product.objects.filter(category=category)\n\t\t# Pagination\n\t\tpaginator = Paginator(product_list, 52)  # Show 10 products per page\n\t\tpage = request.GET.get('page')",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\tcategory",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\tcategory = Category.objects.get(name=foo)\n\t\tproduct_list = Product.objects.filter(category=category)\n\t\t# Pagination\n\t\tpaginator = Paginator(product_list, 52)  # Show 10 products per page\n\t\tpage = request.GET.get('page')\n\t\ttry:\n\t\t\tproducts = paginator.page(page)\n\t\texcept PageNotAnInteger:\n\t\t\t# If page is not an integer, deliver first page.\n\t\t\tproducts = paginator.page(1)",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\tproduct_list",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\tproduct_list = Product.objects.filter(category=category)\n\t\t# Pagination\n\t\tpaginator = Paginator(product_list, 52)  # Show 10 products per page\n\t\tpage = request.GET.get('page')\n\t\ttry:\n\t\t\tproducts = paginator.page(page)\n\t\texcept PageNotAnInteger:\n\t\t\t# If page is not an integer, deliver first page.\n\t\t\tproducts = paginator.page(1)\n\t\texcept EmptyPage:",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\tpaginator",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\tpaginator = Paginator(product_list, 52)  # Show 10 products per page\n\t\tpage = request.GET.get('page')\n\t\ttry:\n\t\t\tproducts = paginator.page(page)\n\t\texcept PageNotAnInteger:\n\t\t\t# If page is not an integer, deliver first page.\n\t\t\tproducts = paginator.page(1)\n\t\texcept EmptyPage:\n\t\t\t# If page is out of range (e.g. 9999), deliver last page of results.\n\t\t\tproducts = paginator.page(paginator.num_pages)",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\tpage",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\tpage = request.GET.get('page')\n\t\ttry:\n\t\t\tproducts = paginator.page(page)\n\t\texcept PageNotAnInteger:\n\t\t\t# If page is not an integer, deliver first page.\n\t\t\tproducts = paginator.page(1)\n\t\texcept EmptyPage:\n\t\t\t# If page is out of range (e.g. 9999), deliver last page of results.\n\t\t\tproducts = paginator.page(paginator.num_pages)\n\t\treturn render(request, 'category.html', {'products':products, 'category':category})",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\t\tproducts",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\t\tproducts = paginator.page(page)\n\t\texcept PageNotAnInteger:\n\t\t\t# If page is not an integer, deliver first page.\n\t\t\tproducts = paginator.page(1)\n\t\texcept EmptyPage:\n\t\t\t# If page is out of range (e.g. 9999), deliver last page of results.\n\t\t\tproducts = paginator.page(paginator.num_pages)\n\t\treturn render(request, 'category.html', {'products':products, 'category':category})\n\texcept:\n\t\tmessages.success(request, (\"That Category Doesn't Exist...\"))",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\t\tproducts",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\t\tproducts = paginator.page(1)\n\t\texcept EmptyPage:\n\t\t\t# If page is out of range (e.g. 9999), deliver last page of results.\n\t\t\tproducts = paginator.page(paginator.num_pages)\n\t\treturn render(request, 'category.html', {'products':products, 'category':category})\n\texcept:\n\t\tmessages.success(request, (\"That Category Doesn't Exist...\"))\n\t\treturn redirect('home')\ndef product(request,pk):\n\tproduct = Product.objects.get(id=pk)",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\t\tproducts",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\t\tproducts = paginator.page(paginator.num_pages)\n\t\treturn render(request, 'category.html', {'products':products, 'category':category})\n\texcept:\n\t\tmessages.success(request, (\"That Category Doesn't Exist...\"))\n\t\treturn redirect('home')\ndef product(request,pk):\n\tproduct = Product.objects.get(id=pk)\n\treccomend_products = Product.objects.filter(category=product.category)[:3]\n\treturn render(request, 'product.html', {'product':product, 'reccomend_products':reccomend_products})\n# def home(request):",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\tproduct",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\tproduct = Product.objects.get(id=pk)\n\treccomend_products = Product.objects.filter(category=product.category)[:3]\n\treturn render(request, 'product.html', {'product':product, 'reccomend_products':reccomend_products})\n# def home(request):\n# \tproducts = Product.objects.all()\n# \treturn render(request, 'home.html', {'products':products})\ndef about(request):\n\treturn render(request, 'about.html', {})\t\ndef login_user(request):\n\tif request.method == \"POST\":",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\treccomend_products",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\treccomend_products = Product.objects.filter(category=product.category)[:3]\n\treturn render(request, 'product.html', {'product':product, 'reccomend_products':reccomend_products})\n# def home(request):\n# \tproducts = Product.objects.all()\n# \treturn render(request, 'home.html', {'products':products})\ndef about(request):\n\treturn render(request, 'about.html', {})\t\ndef login_user(request):\n\tif request.method == \"POST\":\n\t\tusername = request.POST['username']",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\tusername",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\tusername = request.POST['username']\n\t\tpassword = request.POST['password']\n\t\tuser = authenticate(request, username=username, password=password)\n\t\tif user is not None:\n\t\t\tlogin(request, user)\n\t\t\t# Do some shopping cart stuff\n\t\t\tcurrent_user = Profile.objects.get(user__id=request.user.id)\n\t\t\t# Get their saved cart from database\n\t\t\tsaved_cart = current_user.old_cart\n\t\t\t# Convert database string to python dictionary",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\tpassword",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\tpassword = request.POST['password']\n\t\tuser = authenticate(request, username=username, password=password)\n\t\tif user is not None:\n\t\t\tlogin(request, user)\n\t\t\t# Do some shopping cart stuff\n\t\t\tcurrent_user = Profile.objects.get(user__id=request.user.id)\n\t\t\t# Get their saved cart from database\n\t\t\tsaved_cart = current_user.old_cart\n\t\t\t# Convert database string to python dictionary\n\t\t\tif saved_cart:",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\tuser",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\tuser = authenticate(request, username=username, password=password)\n\t\tif user is not None:\n\t\t\tlogin(request, user)\n\t\t\t# Do some shopping cart stuff\n\t\t\tcurrent_user = Profile.objects.get(user__id=request.user.id)\n\t\t\t# Get their saved cart from database\n\t\t\tsaved_cart = current_user.old_cart\n\t\t\t# Convert database string to python dictionary\n\t\t\tif saved_cart:\n\t\t\t\t# Convert to dictionary using JSON",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\t\tcurrent_user",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\t\tcurrent_user = Profile.objects.get(user__id=request.user.id)\n\t\t\t# Get their saved cart from database\n\t\t\tsaved_cart = current_user.old_cart\n\t\t\t# Convert database string to python dictionary\n\t\t\tif saved_cart:\n\t\t\t\t# Convert to dictionary using JSON\n\t\t\t\tconverted_cart = json.loads(saved_cart)\n\t\t\t\t# Add the loaded cart dictionary to our session\n\t\t\t\t# Get the cart\n\t\t\t\tcart = Cart(request)",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\t\tsaved_cart",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\t\tsaved_cart = current_user.old_cart\n\t\t\t# Convert database string to python dictionary\n\t\t\tif saved_cart:\n\t\t\t\t# Convert to dictionary using JSON\n\t\t\t\tconverted_cart = json.loads(saved_cart)\n\t\t\t\t# Add the loaded cart dictionary to our session\n\t\t\t\t# Get the cart\n\t\t\t\tcart = Cart(request)\n\t\t\t\t# Loop thru the cart and add the items from the database\n\t\t\t\tfor key,value in converted_cart.items():",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tconverted_cart",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\t\t\tconverted_cart = json.loads(saved_cart)\n\t\t\t\t# Add the loaded cart dictionary to our session\n\t\t\t\t# Get the cart\n\t\t\t\tcart = Cart(request)\n\t\t\t\t# Loop thru the cart and add the items from the database\n\t\t\t\tfor key,value in converted_cart.items():\n\t\t\t\t\tcart.db_add(product=key, quantity=value)\n\t\t\tmessages.success(request, (\"You Have Been Logged In!\"))\n\t\t\treturn redirect('home')\n\t\telse:",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tcart",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\t\t\tcart = Cart(request)\n\t\t\t\t# Loop thru the cart and add the items from the database\n\t\t\t\tfor key,value in converted_cart.items():\n\t\t\t\t\tcart.db_add(product=key, quantity=value)\n\t\t\tmessages.success(request, (\"You Have Been Logged In!\"))\n\t\t\treturn redirect('home')\n\t\telse:\n\t\t\tmessages.success(request, (\"There was an error, please try again...\"))\n\t\t\treturn redirect('login')\n\telse:",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\tform",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\tform = SignUpForm()\n\tif request.method == \"POST\":\n\t\tform = SignUpForm(request.POST)\n\t\tif form.is_valid():\n\t\t\tform.save()\n\t\t\tusername = form.cleaned_data['username']\n\t\t\tpassword = form.cleaned_data['password1']\n\t\t\t# log in user\n\t\t\tuser = authenticate(username=username, password=password)\n\t\t\tlogin(request, user)",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\tform",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\tform = SignUpForm(request.POST)\n\t\tif form.is_valid():\n\t\t\tform.save()\n\t\t\tusername = form.cleaned_data['username']\n\t\t\tpassword = form.cleaned_data['password1']\n\t\t\t# log in user\n\t\t\tuser = authenticate(username=username, password=password)\n\t\t\tlogin(request, user)\n\t\t\tmessages.success(request, (\"Username Created - Please Fill Out Your User Info Below...\"))\n\t\t\treturn redirect('update_info')",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\t\tusername",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\t\tusername = form.cleaned_data['username']\n\t\t\tpassword = form.cleaned_data['password1']\n\t\t\t# log in user\n\t\t\tuser = authenticate(username=username, password=password)\n\t\t\tlogin(request, user)\n\t\t\tmessages.success(request, (\"Username Created - Please Fill Out Your User Info Below...\"))\n\t\t\treturn redirect('update_info')\n\t\telse:\n\t\t\tmessages.success(request, (\"Whoops! There was a problem Registering, please try again...\"))\n\t\t\treturn redirect('register')",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\t\tpassword",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\t\tpassword = form.cleaned_data['password1']\n\t\t\t# log in user\n\t\t\tuser = authenticate(username=username, password=password)\n\t\t\tlogin(request, user)\n\t\t\tmessages.success(request, (\"Username Created - Please Fill Out Your User Info Below...\"))\n\t\t\treturn redirect('update_info')\n\t\telse:\n\t\t\tmessages.success(request, (\"Whoops! There was a problem Registering, please try again...\"))\n\t\t\treturn redirect('register')\n\telse:",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "\t\t\tuser",
        "kind": 5,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "\t\t\tuser = authenticate(username=username, password=password)\n\t\t\tlogin(request, user)\n\t\t\tmessages.success(request, (\"Username Created - Please Fill Out Your User Info Below...\"))\n\t\t\treturn redirect('update_info')\n\t\telse:\n\t\t\tmessages.success(request, (\"Whoops! There was a problem Registering, please try again...\"))\n\t\t\treturn redirect('register')\n\telse:\n\t\treturn render(request, 'register.html', {'form':form})\ndef home(request):",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'ecom.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]